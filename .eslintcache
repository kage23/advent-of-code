[{"/Users/kylegsessions/projects/advent-of-code/src/index.tsx":"1","/Users/kylegsessions/projects/advent-of-code/src/2016/Config.tsx":"2","/Users/kylegsessions/projects/advent-of-code/src/2017/Day9.tsx":"3","/Users/kylegsessions/projects/advent-of-code/src/2017/Day11.tsx":"4","/Users/kylegsessions/projects/advent-of-code/src/2017/Day18.tsx":"5","/Users/kylegsessions/projects/advent-of-code/src/2017/Day3.tsx":"6","/Users/kylegsessions/projects/advent-of-code/src/2018/Day9.tsx":"7","/Users/kylegsessions/projects/advent-of-code/src/2018/Day15.tsx":"8","/Users/kylegsessions/projects/advent-of-code/src/2018/Day5.tsx":"9","/Users/kylegsessions/projects/advent-of-code/src/2015/Day5.tsx":"10","/Users/kylegsessions/projects/advent-of-code/src/2015/Day14.tsx":"11","/Users/kylegsessions/projects/advent-of-code/src/2015/Day20.tsx":"12","/Users/kylegsessions/projects/advent-of-code/src/2015/Day22.tsx":"13","/Users/kylegsessions/projects/advent-of-code/src/2019/Day25.tsx":"14","/Users/kylegsessions/projects/advent-of-code/src/2019/Day18.tsx":"15","/Users/kylegsessions/projects/advent-of-code/src/2019/Day14.tsx":"16","/Users/kylegsessions/projects/advent-of-code/src/2019/Day6.tsx":"17","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day13.tsx":"18","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day16.tsx":"19","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day9.tsx":"20","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day13.tsx":"21","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day5.tsx":"22","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day8.tsx":"23","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day10.tsx":"24","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day22.tsx":"25","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day13.tsx":"26","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day10.tsx":"27","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day9.tsx":"28","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day25.tsx":"29","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day24.tsx":"30","/Users/kylegsessions/projects/advent-of-code/src/2019/Day2.tsx":"31","/Users/kylegsessions/projects/advent-of-code/src/2016/Day23.tsx":"32","/Users/kylegsessions/projects/advent-of-code/src/2016/Day19.tsx":"33","/Users/kylegsessions/projects/advent-of-code/src/2016/Day16.tsx":"34","/Users/kylegsessions/projects/advent-of-code/src/2016/Day7.tsx":"35","/Users/kylegsessions/projects/advent-of-code/src/2016/Day20.tsx":"36","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day1.tsx":"37","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day19.tsx":"38","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day16.tsx":"39","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day4.tsx":"40","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day17.tsx":"41","/Users/kylegsessions/projects/advent-of-code/src/2018/Config.tsx":"42","/Users/kylegsessions/projects/advent-of-code/src/2019/Config.tsx":"43","/Users/kylegsessions/projects/advent-of-code/src/2015/Day1.tsx":"44","/Users/kylegsessions/projects/advent-of-code/src/2015/Day2.tsx":"45","/Users/kylegsessions/projects/advent-of-code/src/2015/Day3.tsx":"46","/Users/kylegsessions/projects/advent-of-code/src/2015/Day4.tsx":"47","/Users/kylegsessions/projects/advent-of-code/src/2015/Day6.tsx":"48","/Users/kylegsessions/projects/advent-of-code/src/2015/Day8.tsx":"49","/Users/kylegsessions/projects/advent-of-code/src/2015/Day9.tsx":"50","/Users/kylegsessions/projects/advent-of-code/src/2015/Day11.tsx":"51","/Users/kylegsessions/projects/advent-of-code/src/2015/Day15.tsx":"52","/Users/kylegsessions/projects/advent-of-code/src/2015/Day17.tsx":"53","/Users/kylegsessions/projects/advent-of-code/src/2015/Day19.tsx":"54","/Users/kylegsessions/projects/advent-of-code/src/2016/Day6.tsx":"55","/Users/kylegsessions/projects/advent-of-code/src/2016/Day10.tsx":"56","/Users/kylegsessions/projects/advent-of-code/src/2016/Day13.tsx":"57","/Users/kylegsessions/projects/advent-of-code/src/2017/Day1.tsx":"58","/Users/kylegsessions/projects/advent-of-code/src/2017/Day5.tsx":"59","/Users/kylegsessions/projects/advent-of-code/src/2017/Day10.tsx":"60","/Users/kylegsessions/projects/advent-of-code/src/2017/Day12.tsx":"61","/Users/kylegsessions/projects/advent-of-code/src/2017/Day20.tsx":"62","/Users/kylegsessions/projects/advent-of-code/src/2019/Day15.tsx":"63","/Users/kylegsessions/projects/advent-of-code/src/2019/Day16.tsx":"64","/Users/kylegsessions/projects/advent-of-code/src/2019/Day8.tsx":"65","/Users/kylegsessions/projects/advent-of-code/src/2019/Day1.tsx":"66","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day1.tsx":"67","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day7.tsx":"68","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day12.tsx":"69","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day21.tsx":"70","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day25.tsx":"71","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day8.tsx":"72","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day15.tsx":"73","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day25.tsx":"74","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day4.tsx":"75","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day21.tsx":"76","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day23.tsx":"77","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day17.tsx":"78","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day15.tsx":"79","/Users/kylegsessions/projects/advent-of-code/src/utils/Tree.ts":"80","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day17.tsx":"81","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day12.tsx":"82","/Users/kylegsessions/projects/advent-of-code/src/2018/Day20.tsx":"83","/Users/kylegsessions/projects/advent-of-code/src/2018/Day14.tsx":"84","/Users/kylegsessions/projects/advent-of-code/src/2018/Day7.tsx":"85","/Users/kylegsessions/projects/advent-of-code/src/2017/Day25.tsx":"86","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day17.tsx":"87","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day10.tsx":"88","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day3.tsx":"89","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day22.tsx":"90","/Users/kylegsessions/projects/advent-of-code/src/App.tsx":"91","/Users/kylegsessions/projects/advent-of-code/src/2015/Config.tsx":"92","/Users/kylegsessions/projects/advent-of-code/src/2016/Day14.tsx":"93","/Users/kylegsessions/projects/advent-of-code/src/2016/Day24.tsx":"94","/Users/kylegsessions/projects/advent-of-code/src/2017/Day6.tsx":"95","/Users/kylegsessions/projects/advent-of-code/src/2017/Day19.tsx":"96","/Users/kylegsessions/projects/advent-of-code/src/2017/Day15.tsx":"97","/Users/kylegsessions/projects/advent-of-code/src/2018/Day10.tsx":"98","/Users/kylegsessions/projects/advent-of-code/src/2018/Day16.tsx":"99","/Users/kylegsessions/projects/advent-of-code/src/2018/Day24.tsx":"100","/Users/kylegsessions/projects/advent-of-code/src/2015/Day16.tsx":"101","/Users/kylegsessions/projects/advent-of-code/src/utils/DLL.ts":"102","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day14.tsx":"103","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day7.tsx":"104","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day3.tsx":"105","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day15.tsx":"106","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day12.tsx":"107","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day25.tsx":"108","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day17.tsx":"109","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day14.tsx":"110","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day9.tsx":"111","/Users/kylegsessions/projects/advent-of-code/src/2019/Day19.tsx":"112","/Users/kylegsessions/projects/advent-of-code/src/2019/Day7.tsx":"113","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day3.tsx":"114","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day7.tsx":"115","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day2.tsx":"116","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day4.tsx":"117","/Users/kylegsessions/projects/advent-of-code/src/2016/Day21.tsx":"118","/Users/kylegsessions/projects/advent-of-code/src/2017/Day23.tsx":"119","/Users/kylegsessions/projects/advent-of-code/src/2019/Day11.tsx":"120","/Users/kylegsessions/projects/advent-of-code/src/2015/Day12.tsx":"121","/Users/kylegsessions/projects/advent-of-code/src/2015/Day21.tsx":"122","/Users/kylegsessions/projects/advent-of-code/src/2015/Day25.tsx":"123","/Users/kylegsessions/projects/advent-of-code/src/2016/Day3.tsx":"124","/Users/kylegsessions/projects/advent-of-code/src/2016/Day9.tsx":"125","/Users/kylegsessions/projects/advent-of-code/src/2016/Day12.tsx":"126","/Users/kylegsessions/projects/advent-of-code/src/2016/Day18.tsx":"127","/Users/kylegsessions/projects/advent-of-code/src/2016/Day25.tsx":"128","/Users/kylegsessions/projects/advent-of-code/src/2017/Day7.tsx":"129","/Users/kylegsessions/projects/advent-of-code/src/2017/Day21.tsx":"130","/Users/kylegsessions/projects/advent-of-code/src/2019/Day21.tsx":"131","/Users/kylegsessions/projects/advent-of-code/src/2019/Day10.tsx":"132","/Users/kylegsessions/projects/advent-of-code/src/2019/Day3.tsx":"133","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day4.tsx":"134","/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day15.tsx":"135","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day2.tsx":"136","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day9.tsx":"137","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day6.tsx":"138","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day14.tsx":"139","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day5.tsx":"140","/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day18.tsx":"141","/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day14.tsx":"142","/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day23.tsx":"143","/Users/kylegsessions/projects/advent-of-code/src/2018/Day23.tsx":"144","/Users/kylegsessions/projects/advent-of-code/src/2018/Day12.tsx":"145","/Users/kylegsessions/projects/advent-of-code/src/2018/Day2.tsx":"146","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day23.tsx":"147","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day19.tsx":"148","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day14.tsx":"149","/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day4.tsx":"150"},{"size":168,"mtime":1582943580655,"results":"151","hashOfConfig":"152"},{"size":1289,"mtime":1582943580598,"results":"153","hashOfConfig":"152"},{"size":1959,"mtime":1582943580617,"results":"154","hashOfConfig":"152"},{"size":2218,"mtime":1582943580612,"results":"155","hashOfConfig":"152"},{"size":6969,"mtime":1582943580613,"results":"156","hashOfConfig":"152"},{"size":3170,"mtime":1582943580615,"results":"157","hashOfConfig":"152"},{"size":3242,"mtime":1582943580633,"results":"158","hashOfConfig":"152"},{"size":10438,"mtime":1606674861166,"results":"159","hashOfConfig":"152"},{"size":2462,"mtime":1582943580632,"results":"160","hashOfConfig":"152"},{"size":2637,"mtime":1583019627969,"results":"161","hashOfConfig":"152"},{"size":2825,"mtime":1583019627965,"results":"162","hashOfConfig":"152"},{"size":2865,"mtime":1583019627967,"results":"163","hashOfConfig":"152"},{"size":6110,"mtime":1583019627968,"results":"164","hashOfConfig":"152"},{"size":2502,"mtime":1582943580646,"results":"165","hashOfConfig":"152"},{"size":13246,"mtime":1582943580644,"results":"166","hashOfConfig":"152"},{"size":4625,"mtime":1582943580643,"results":"167","hashOfConfig":"152"},{"size":3444,"mtime":1582943580647,"results":"168","hashOfConfig":"152"},{"size":382,"mtime":1582943580618,"results":"169","hashOfConfig":"152"},{"size":48594,"mtime":1582943580619,"results":"170","hashOfConfig":"152"},{"size":16239,"mtime":1582943580625,"results":"171","hashOfConfig":"152"},{"size":22463,"mtime":1582943580634,"results":"172","hashOfConfig":"152"},{"size":50178,"mtime":1582943580639,"results":"173","hashOfConfig":"152"},{"size":6633,"mtime":1583019627976,"results":"174","hashOfConfig":"152"},{"size":159,"mtime":1583019627971,"results":"175","hashOfConfig":"152"},{"size":2122,"mtime":1582943580650,"results":"176","hashOfConfig":"152"},{"size":14823,"mtime":1582943580648,"results":"177","hashOfConfig":"152"},{"size":3374,"mtime":1582943580648,"results":"178","hashOfConfig":"152"},{"size":3622,"mtime":1582943580653,"results":"179","hashOfConfig":"152"},{"size":14244,"mtime":1582943580637,"results":"180","hashOfConfig":"152"},{"size":3042,"mtime":1582943580637,"results":"181","hashOfConfig":"152"},{"size":1770,"mtime":1582943580644,"results":"182","hashOfConfig":"152"},{"size":2085,"mtime":1582943580601,"results":"183","hashOfConfig":"152"},{"size":2690,"mtime":1582943580600,"results":"184","hashOfConfig":"152"},{"size":1970,"mtime":1582943580599,"results":"185","hashOfConfig":"152"},{"size":2917,"mtime":1582943580601,"results":"186","hashOfConfig":"152"},{"size":2021,"mtime":1582943580600,"results":"187","hashOfConfig":"152"},{"size":824,"mtime":1582943580648,"results":"188","hashOfConfig":"152"},{"size":95,"mtime":1582943580603,"results":"189","hashOfConfig":"152"},{"size":211,"mtime":1582943580603,"results":"190","hashOfConfig":"152"},{"size":44913,"mtime":1582943580606,"results":"191","hashOfConfig":"152"},{"size":159,"mtime":1582943580603,"results":"192","hashOfConfig":"152"},{"size":2145,"mtime":1583041093927,"results":"193","hashOfConfig":"152"},{"size":2391,"mtime":1583041095389,"results":"194","hashOfConfig":"152"},{"size":1604,"mtime":1583019627965,"results":"195","hashOfConfig":"152"},{"size":1715,"mtime":1583019627967,"results":"196","hashOfConfig":"152"},{"size":2170,"mtime":1583019627969,"results":"197","hashOfConfig":"152"},{"size":1154,"mtime":1583019627969,"results":"198","hashOfConfig":"152"},{"size":2847,"mtime":1583019627970,"results":"199","hashOfConfig":"152"},{"size":2410,"mtime":1583019627970,"results":"200","hashOfConfig":"152"},{"size":2890,"mtime":1583019627970,"results":"201","hashOfConfig":"152"},{"size":2488,"mtime":1583019627965,"results":"202","hashOfConfig":"152"},{"size":3723,"mtime":1583019627966,"results":"203","hashOfConfig":"152"},{"size":2532,"mtime":1583019627966,"results":"204","hashOfConfig":"152"},{"size":4684,"mtime":1583019627967,"results":"205","hashOfConfig":"152"},{"size":2607,"mtime":1582943580601,"results":"206","hashOfConfig":"152"},{"size":4099,"mtime":1582943580599,"results":"207","hashOfConfig":"152"},{"size":4095,"mtime":1582943580599,"results":"208","hashOfConfig":"152"},{"size":1687,"mtime":1582943580612,"results":"209","hashOfConfig":"152"},{"size":2314,"mtime":1582943580616,"results":"210","hashOfConfig":"152"},{"size":2953,"mtime":1582943580612,"results":"211","hashOfConfig":"152"},{"size":3152,"mtime":1582943580612,"results":"212","hashOfConfig":"152"},{"size":4910,"mtime":1582943580614,"results":"213","hashOfConfig":"152"},{"size":12956,"mtime":1582943580643,"results":"214","hashOfConfig":"152"},{"size":3992,"mtime":1582943580643,"results":"215","hashOfConfig":"152"},{"size":3293,"mtime":1582943580647,"results":"216","hashOfConfig":"152"},{"size":1753,"mtime":1582943580642,"results":"217","hashOfConfig":"152"},{"size":7223,"mtime":1583019627970,"results":"218","hashOfConfig":"152"},{"size":5596,"mtime":1583019627976,"results":"219","hashOfConfig":"152"},{"size":42509,"mtime":1583019627971,"results":"220","hashOfConfig":"152"},{"size":108,"mtime":1583019627974,"results":"221","hashOfConfig":"152"},{"size":172,"mtime":1583019627974,"results":"222","hashOfConfig":"152"},{"size":3183,"mtime":1582943580608,"results":"223","hashOfConfig":"152"},{"size":966,"mtime":1582943580603,"results":"224","hashOfConfig":"152"},{"size":953,"mtime":1582943580605,"results":"225","hashOfConfig":"152"},{"size":23270,"mtime":1582943580623,"results":"226","hashOfConfig":"152"},{"size":3835,"mtime":1582943580621,"results":"227","hashOfConfig":"152"},{"size":8106,"mtime":1582943580651,"results":"228","hashOfConfig":"152"},{"size":4942,"mtime":1582943580649,"results":"229","hashOfConfig":"152"},{"size":3450,"mtime":1582943580649,"results":"230","hashOfConfig":"152"},{"size":1377,"mtime":1582943580656,"results":"231","hashOfConfig":"152"},{"size":89,"mtime":1582943580620,"results":"232","hashOfConfig":"152"},{"size":299,"mtime":1582943580602,"results":"233","hashOfConfig":"152"},{"size":7714,"mtime":1582943580630,"results":"234","hashOfConfig":"152"},{"size":5514,"mtime":1582943580628,"results":"235","hashOfConfig":"152"},{"size":3616,"mtime":1582943580632,"results":"236","hashOfConfig":"152"},{"size":2801,"mtime":1582943580615,"results":"237","hashOfConfig":"152"},{"size":29810,"mtime":1582943580635,"results":"238","hashOfConfig":"152"},{"size":13959,"mtime":1582943580633,"results":"239","hashOfConfig":"152"},{"size":30469,"mtime":1582943580638,"results":"240","hashOfConfig":"152"},{"size":745,"mtime":1582943580622,"results":"241","hashOfConfig":"152"},{"size":7763,"mtime":1583041093238,"results":"242","hashOfConfig":"152"},{"size":1972,"mtime":1583019627964,"results":"243","hashOfConfig":"152"},{"size":3362,"mtime":1582943580599,"results":"244","hashOfConfig":"152"},{"size":5902,"mtime":1582943580601,"results":"245","hashOfConfig":"152"},{"size":1923,"mtime":1582943580616,"results":"246","hashOfConfig":"152"},{"size":2304,"mtime":1582943580614,"results":"247","hashOfConfig":"152"},{"size":2527,"mtime":1582943580613,"results":"248","hashOfConfig":"152"},{"size":6155,"mtime":1582943580628,"results":"249","hashOfConfig":"152"},{"size":5317,"mtime":1582943580629,"results":"250","hashOfConfig":"152"},{"size":12702,"mtime":1582943580631,"results":"251","hashOfConfig":"152"},{"size":4277,"mtime":1583019627966,"results":"252","hashOfConfig":"152"},{"size":1913,"mtime":1582943580656,"results":"253","hashOfConfig":"152"},{"size":95,"mtime":1582943580603,"results":"254","hashOfConfig":"152"},{"size":179982,"mtime":1582943580608,"results":"255","hashOfConfig":"152"},{"size":27927,"mtime":1582943580605,"results":"256","hashOfConfig":"152"},{"size":195,"mtime":1582943580619,"results":"257","hashOfConfig":"152"},{"size":749,"mtime":1582943580634,"results":"258","hashOfConfig":"152"},{"size":17638,"mtime":1582943580651,"results":"259","hashOfConfig":"152"},{"size":153,"mtime":1583019627973,"results":"260","hashOfConfig":"152"},{"size":898,"mtime":1583019627972,"results":"261","hashOfConfig":"152"},{"size":579,"mtime":1582943580640,"results":"262","hashOfConfig":"152"},{"size":4169,"mtime":1582943580644,"results":"263","hashOfConfig":"152"},{"size":8140,"mtime":1582943580647,"results":"264","hashOfConfig":"152"},{"size":8331,"mtime":1583019627975,"results":"265","hashOfConfig":"152"},{"size":1800,"mtime":1582943580652,"results":"266","hashOfConfig":"152"},{"size":8225,"mtime":1583019627973,"results":"267","hashOfConfig":"152"},{"size":238,"mtime":1582943580651,"results":"268","hashOfConfig":"152"},{"size":4835,"mtime":1606674994557,"results":"269","hashOfConfig":"152"},{"size":7247,"mtime":1606675008409,"results":"270","hashOfConfig":"152"},{"size":6454,"mtime":1606675048615,"results":"271","hashOfConfig":"152"},{"size":1572,"mtime":1583019627965,"results":"272","hashOfConfig":"152"},{"size":6701,"mtime":1583019627967,"results":"273","hashOfConfig":"152"},{"size":1481,"mtime":1583019627969,"results":"274","hashOfConfig":"152"},{"size":2073,"mtime":1582943580601,"results":"275","hashOfConfig":"152"},{"size":2874,"mtime":1582943580602,"results":"276","hashOfConfig":"152"},{"size":2090,"mtime":1582943580599,"results":"277","hashOfConfig":"152"},{"size":2248,"mtime":1582943580600,"results":"278","hashOfConfig":"152"},{"size":2448,"mtime":1582943580601,"results":"279","hashOfConfig":"152"},{"size":3690,"mtime":1582943580616,"results":"280","hashOfConfig":"152"},{"size":6103,"mtime":1582943580614,"results":"281","hashOfConfig":"152"},{"size":3322,"mtime":1582943580645,"results":"282","hashOfConfig":"152"},{"size":5128,"mtime":1582943580642,"results":"283","hashOfConfig":"152"},{"size":3279,"mtime":1582943580646,"results":"284","hashOfConfig":"152"},{"size":119,"mtime":1583019627975,"results":"285","hashOfConfig":"152"},{"size":506,"mtime":1583019627972,"results":"286","hashOfConfig":"152"},{"size":2523,"mtime":1582943580603,"results":"287","hashOfConfig":"152"},{"size":12498,"mtime":1582943580609,"results":"288","hashOfConfig":"152"},{"size":128,"mtime":1582943580624,"results":"289","hashOfConfig":"152"},{"size":3312,"mtime":1582943580648,"results":"290","hashOfConfig":"152"},{"size":3061,"mtime":1582943580652,"results":"291","hashOfConfig":"152"},{"size":14472,"mtime":1582943580649,"results":"292","hashOfConfig":"152"},{"size":101,"mtime":1582943580619,"results":"293","hashOfConfig":"152"},{"size":535,"mtime":1582943580604,"results":"294","hashOfConfig":"152"},{"size":3587,"mtime":1582943580631,"results":"295","hashOfConfig":"152"},{"size":4590,"mtime":1582943580628,"results":"296","hashOfConfig":"152"},{"size":2288,"mtime":1582943580630,"results":"297","hashOfConfig":"152"},{"size":45628,"mtime":1582943580637,"results":"298","hashOfConfig":"152"},{"size":573,"mtime":1582943580636,"results":"299","hashOfConfig":"152"},{"size":238,"mtime":1582943580634,"results":"300","hashOfConfig":"152"},{"size":35598,"mtime":1582943580638,"results":"301","hashOfConfig":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},"je4vdk",{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"371","usedDeprecatedRules":"322"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"313"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"419","usedDeprecatedRules":"322"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"434","usedDeprecatedRules":"313"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"313"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"313"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kylegsessions/projects/advent-of-code/src/index.tsx",[],["611","612"],"/Users/kylegsessions/projects/advent-of-code/src/2016/Config.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day9.tsx",["613"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day11.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day18.tsx",[],["614","615"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day15.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day5.tsx",[],["616","617"],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day5.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day20.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day22.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day18.tsx",["618","619","620"],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day6.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day13.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day16.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day13.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day5.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day8.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day10.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day22.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day13.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day10.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day24.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day2.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day23.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day19.tsx",["621"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport DLL from '../utils/DLL'\n\nimport INPUT from './Input/Day19'\n\nconst doTheBadWhiteElephant = (inputKey: string): { answer1: string } => {\n  const elfCount = parseInt(INPUT[inputKey])\n  const circle = new DLL()\n\n  for (let i = 1; i <= elfCount; i++) {\n    circle.push({\n      giftCount: 1,\n      position: i\n    })\n  }\n\n  let currentElf = circle.head\n  while (circle.length > 1) {\n    if (currentElf && currentElf.next) {\n      currentElf.value.giftCount += currentElf.next.value.giftCount\n      circle.removeNode(currentElf.next)\n      currentElf = currentElf.next\n    }\n  }\n\n  return {\n    answer1: currentElf ? currentElf.value.position.toString() : ''\n  }\n}\n\nconst doTheBadWhiteElephant_v2 = (inputKey: string): { answer2?: string } => {\n  const elfCount = parseInt(INPUT[inputKey])\n  const circle = new DLL()\n\n  const startTime = new Date().getTime()\n\n  for (let i = 1; i <= elfCount; i++) {\n    circle.push({\n      giftCount: 1,\n      position: i\n    })\n  }\n\n  let currentElf = circle.head\n  const stealFromCount = Math.floor(circle.length / 2)\n  let stealFrom = currentElf\n  for (let i = 0; i < stealFromCount; i++)\n    if (stealFrom && stealFrom.next) stealFrom = stealFrom.next\n\n  searchLoop:\n  while (circle.length > 1) {\n    if (currentElf && stealFrom) {\n      currentElf.value.giftCount += stealFrom.value.giftCount\n      circle.removeNode(stealFrom)\n      if (currentElf.next) currentElf = currentElf.next\n      if (circle.length % 2 === 0) {\n        // Advance stealFrom by two\n        if (stealFrom && stealFrom.next) stealFrom = stealFrom.next\n        if (stealFrom && stealFrom.next) stealFrom = stealFrom.next\n      } else {\n        // Advance stealFrom by one\n        if (stealFrom && stealFrom.next) stealFrom = stealFrom.next\n      }\n    }\n  }\n\n  console.log(`Total time: ${new Date().getTime() - startTime}`)\n\n  return {\n    answer2: currentElf ? currentElf.value.position.toString() : ''\n  }\n}\n\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Do the Bad White Elephant',\n    onClick: doTheBadWhiteElephant\n  },\n  {\n    label: 'Do the Bad White Elephant, v2',\n    onClick: doTheBadWhiteElephant_v2\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      The elf in position <code>{answer}</code> gets all the presents.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      The elf in position <code>{answer}</code> gets all the presents.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 19,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'An Elephant Named Joseph'\n}\n\nexport default config","/Users/kylegsessions/projects/advent-of-code/src/2016/Day16.tsx",["622"],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day7.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day20.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day1.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day19.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day16.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day4.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day17.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Config.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Config.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day1.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day2.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day4.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day6.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day8.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day11.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day15.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day17.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day19.tsx",["623","624"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\nimport SLL from '../utils/SLL'\n\nimport INPUT from './Input/Day19'\n\nconst findShortestPathToTarget = (start: string, target: string, replacements: Map<string, string[]>): number => {\n  const queue: SLL = new SLL(start)\n  const parents: { [key:string]: string } = { [start]: '' }\n\n  while (queue.length > 0) {\n    const current = queue.shift()\n    if (current) {\n      if (current === target) {\n        let pathCurrent = current\n        let pathLength = 0\n\n        while (parents[pathCurrent] !== '') {\n          pathLength++\n          pathCurrent = parents[pathCurrent]\n        }\n\n        return pathLength\n      }\n\n      for (let nextStep of generatePossibleNexts(current, replacements)) {\n        if (nextStep in parents) continue // We've seen this before\n        parents[nextStep] = current\n        sortIntoSearchQueue(nextStep, queue)\n      }\n    }\n  }\n\n  return NaN\n}\n\nfunction * generatePossibleNexts(molecule: string, replacements: Map<string, string[]>) {\n  const replacementFroms = Array.from(replacements.keys()).sort((a, b) => b.length - a.length)\n  for (let i = 0; i < replacementFroms.length; i++) {\n    const from = replacementFroms[i]\n    if (molecule.includes(from)) {\n      const replacement = (replacements.get(from) || [])[0]\n      yield molecule.replace(from, replacement)\n    }\n  }\n}\n\nconst getPossibleNextMolecules = (molecule: string, replacements: Map<string, string[]>): string[] => {\n  // Generate possible molecules\n  let nextMolecules: string[] = []\n  for (let i = 0; i < molecule.length; i++) {\n    const char = molecule.charAt(i)\n    let currentReplacements = replacements.get(char)\n    if (currentReplacements) {\n      currentReplacements.forEach(replacement => {\n        nextMolecules.push(`${molecule.slice(0, i)}${replacement}${molecule.slice(i + 1)}`)\n      })\n    } else {\n      currentReplacements = replacements.get(molecule.slice(i, i + 2))\n      if (currentReplacements) {\n        currentReplacements.forEach(replacement => {\n          nextMolecules.push(`${molecule.slice(0, i)}${replacement}${molecule.slice(i + 2)}`)\n        })\n        i++\n      }\n    }\n  }\n  // De-dupe list\n  nextMolecules = nextMolecules.filter((mol, i) => nextMolecules.indexOf(mol) === i)\n\n  return nextMolecules\n}\n\nconst parseReplacements = (inputList: string[], reverse?: boolean): Map<string, string[]> => {\n  const replacements: Map<string, string[]> = new Map()\n\n  inputList.forEach(inputLine => {\n    const [orig, newThing] = inputLine.split(' => ')\n    if (!reverse) {\n      const replacementsList = replacements.get(orig) || []\n      replacementsList.push(newThing)\n      replacements.set(orig, replacementsList)\n    } else {\n      const replacementsList = replacements.get(newThing) || []\n      replacementsList.push(orig)\n      replacements.set(newThing, replacementsList)\n    }\n  })\n\n  return replacements\n}\n\nconst sortIntoSearchQueue = (insert: string, searchQueue: SLL): void => {\n  if (!searchQueue.length) {\n    searchQueue.push(insert)\n  } else {\n    let insertAfter = searchQueue.head\n    while (\n      insertAfter\n      && insertAfter.value.length <= insert.length\n      && insertAfter.next\n      && insertAfter.next.value.length <= insert.length\n    ) {\n      insertAfter = insertAfter.next\n    }\n    if (insertAfter) {\n      searchQueue.insertAfter(insert, insertAfter)\n    } else {\n      searchQueue.push(insert)\n    }\n  }\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Calibrate Machine',\n    onClick: (inputKey) => {\n      const molecule = INPUT[inputKey].split('\\n').reverse()[0]\n      const replacements = parseReplacements(INPUT[inputKey].split('\\n').slice(0, -2))\n      const nextMolecules = getPossibleNextMolecules(molecule, replacements)\n      return {\n        answer1: nextMolecules.length.toString()\n      }\n    }\n  },\n  {\n    label: 'Generate Molecule',\n    onClick: (inputKey) => {\n      const molecule = INPUT[inputKey].split('\\n').reverse()[0]\n      const replacements = parseReplacements(INPUT[inputKey].split('\\n').slice(0, -2), true)\n      return {\n        answer2: findShortestPathToTarget(molecule, 'e', replacements).toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      You can generate <code>{answer}</code> unique molecules after one replacement step.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      It will take <code>{answer}</code> steps to generate the molecule.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 19,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Medicine for Rudolph'\n}\n\nexport default config","/Users/kylegsessions/projects/advent-of-code/src/2016/Day6.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day10.tsx",["625","626"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day10'\n\ninterface IBot {\n  id: number\n  numbers?: number[]\n  low?: { to: 'bot' | 'output', id: number }\n  high?: { to: 'bot' | 'output', id: number }\n}\n\nconst getBots = (inputKey: string): IBot[] => {\n  const bots: IBot[] = []\n\n  INPUT[inputKey].split('\\n').forEach(line => {\n    const botId = parseInt(line.split('bot ')[1])\n    const bot = bots.find(bot => bot.id === botId) || { id: botId }\n    if (line.startsWith('value')) {\n      const value = parseInt(line.split('value ')[1])\n      if (!bot.numbers) bot.numbers = []\n      if (bot.numbers) bot.numbers.push(value)\n    } else {\n      if (line.split('gives low to ')[1].startsWith('bot')) {\n        bot.low = {\n          to: 'bot',\n          id: parseInt(line.split('gives low to bot ')[1])\n        }\n      }\n      if (line.split('gives low to ')[1].startsWith('output')) {\n        bot.low = {\n          to: 'output',\n          id: parseInt(line.split('gives low to output ')[1])\n        }\n      }\n      if (line.split('and high to ')[1].startsWith('bot')) {\n        bot.high = {\n          to: 'bot',\n          id: parseInt(line.split('and high to bot ')[1])\n        }\n      }\n      if (line.split('and high to ')[1].startsWith('output')) {\n        bot.high = {\n          to: 'output',\n          id: parseInt(line.split('and high to output ')[1])\n        }\n      }\n    }\n    bots.push(bot)\n  })\n\n  return bots\n}\n\nconst runBots = (inputKey: string): {\n  bots: IBot[]\n  outputs: Map<number, number>\n  answer1: undefined | string\n} => {\n  const bots = getBots(inputKey)\n  const outputs: Map<number, number> = new Map()\n  let answer1: undefined | string = undefined\n\n  const comparisonNumbers = inputKey.indexOf('DEMO') !== -1\n  ? [2, 5]\n  : [17, 61]\n\n  while (bots.some(bot => bot.numbers ? bot.numbers.length === 2 : false)) {\n    botLoop:\n    for (const bot of bots) {\n      if (!bot.numbers || bot.numbers.length !== 2) continue botLoop\n      const low = Math.min(...bot.numbers)\n      const high = Math.max(...bot.numbers)\n      bot.numbers = []\n      if (bot.low) {\n        const botLowId = bot.low.id\n        if (bot.low.to === 'bot') {\n          const toBotLow = bots.find(findBot => findBot.id === botLowId)\n          if (toBotLow) {\n            if (!toBotLow.numbers) toBotLow.numbers = []\n            toBotLow.numbers.push(low)\n          }\n        }\n        if (bot.low.to === 'output') {\n          outputs.set(bot.low.id, low)\n        }\n      }\n      if (bot.high) {\n        if (bot.high.to === 'bot') {\n          const botHighId = bot.high.id\n          const toBotHigh = bots.find(findBot => findBot.id === botHighId)\n          if (toBotHigh) {\n            if (!toBotHigh.numbers) toBotHigh.numbers = []\n            toBotHigh.numbers.push(high)\n          }\n        }\n        if (bot.high.to === 'output') {\n          outputs.set(bot.high.id, high)\n        }\n      }\n      if (low === comparisonNumbers[0] && high === comparisonNumbers[1]) {\n        answer1 = bot.id.toString()\n      }\n      break botLoop\n    }\n  }\n\n  return {\n    bots,\n    outputs,\n    answer1\n  }\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Find Bot',\n    onClick: inputKey => {\n      const { answer1 } = runBots(inputKey)\n\n      return {\n        answer1\n      }\n    }\n  },\n  {\n    label: 'Find Value',\n    onClick: inputKey => {\n      const { outputs } = runBots(inputKey)\n\n      return {\n        answer2: ((outputs.get(0) || 1) * (outputs.get(1) || 1) * (outputs.get(2) || 1)).toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      The number of the designated bot is{' '}\n      <code>{answer}</code>.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      The value of outputs <code>0</code>, <code>1</code>, and <code>2</code>{' '}\n      multiplied by each other is <code>{answer}</code>.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 10,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Balance Bots'\n}\n\nexport default config","/Users/kylegsessions/projects/advent-of-code/src/2016/Day13.tsx",["627"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day1.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day5.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day10.tsx",["628"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day12.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day20.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day15.tsx",["629","630","631","632","633","634","635","636"],"import React from 'react'\nimport {\n  IButton,\n  IDayConfig\n} from '../Config'\nimport { intcodeComputer2019, IIntcodeComputerResults, manhattanDistance } from '../utils/Various'\nimport Tree, { TreeNode } from '../utils/Tree'\n\nimport INPUT from './Input/Day15'\n\nlet program: number[] = []\nlet instructionPointer = 0\nlet relativeBase = 0\nlet outputs: number[] = []\nlet stepsTaken = 0\nlet timeSinceRepair = 0\nlet intcodeComputerResults: IIntcodeComputerResults = {\n  finished: false,\n  instructionPointer: 0,\n  outputs: [],\n  relativeBase: 0,\n  program\n}\n\n// D for the droid\n// # for walls\n// . for locations the droid can traverse\n// ' ' (empty space) for unexplored locations\n// X for oxygen system\n// O for spaces containing oxygen\nlet grid: Map<string, ('D' | '#' | '.' | ' ' | 'X' | 'O')> = new Map()\nlet droidPosition = '0,0'\nlet oxyPosition = ''\nlet forbidden: string[] = []\nlet goodXMin = Number.MIN_SAFE_INTEGER\nlet goodYMin = Number.MIN_SAFE_INTEGER\nlet goodXMax = Number.MAX_SAFE_INTEGER\nlet goodYMax = Number.MAX_SAFE_INTEGER\nlet doneWithMapping = false\ngrid.set(droidPosition, 'D')\n\nconst parseGridString = (str: string): number[] => str.split(',').map(i => parseInt(i))\nconst renderGridString = (pos: number[]): string => pos.join(',')\n\nconst getAdjacentPositions = (current: string): { [key:string]: string } => {\n  const [ x, y ] = parseGridString(current)\n  return {\n    n: renderGridString([x , y - 1]),\n    s: renderGridString([x , y + 1]),\n    w: renderGridString([x - 1 , y]),\n    e: renderGridString([x + 1 , y])\n  }\n}\n\nconst getAdjacentPositionsArray = (current: string): string[] => {\n  const { n, e, s, w } = getAdjacentPositions(current)\n  return [ n, e, s, w ]\n}\n\nconst advanceOxygen = () => {\n  timeSinceRepair++\n  const squaresToUpdate: string[] = []\n\n  for (let [key, value] of grid.entries()) {\n    if (value === 'O') {\n      getAdjacentPositionsArray(key).forEach(adjacent => {\n        if (\n          (grid.get(adjacent) === '.' || grid.get(adjacent) === 'D')\n          && !squaresToUpdate.includes(adjacent)\n        ) {\n          squaresToUpdate.push(adjacent)\n        }\n      })\n    }\n  }\n\n  squaresToUpdate.forEach(square => grid.set(square, 'O'))\n}\n\nconst fullOfOxygen = (): boolean => {\n  for (let value of grid.values()) {\n    if (value !== 'O' && value !== '#') return false\n  }\n  return true\n}\n\nconst findNearestUnknownSquare = (): string => {\n  let searchQueue = [droidPosition]\n  const searched = new Map()\n  while (searchQueue.length) {\n    const current = searchQueue.shift()\n    if (typeof current !== 'string') throw new Error('fuck')\n    if (\n      (grid.get(current) === ' ' || grid.get(current) === undefined)\n      && !forbidden.includes(current)\n    ) {\n      return current\n    }\n    searched.set(current, true)\n    getAdjacentPositionsArray(current).forEach(adjacent => {\n      const [ x, y ] = parseGridString(adjacent)\n      if (\n        !searched.get(adjacent)\n        && !searchQueue.includes(adjacent)\n        && !forbidden.includes(adjacent)\n        && (x >= goodXMin && x <= goodXMax && y >= goodYMin && y <= goodYMax)\n      ) {\n        searchQueue.push(adjacent)\n      }\n    })\n  }\n  return ''\n}\n\nconst findShortestPath = (start: string, end: string): string[] | undefined => {\n  const searchTree = new Tree(start)\n  const visited: Map<string, boolean> = new Map()\n\n  let current: TreeNode = searchTree.head\n  mainLoop:\n  while (current.value !== end) {\n    if (typeof current.value === 'string') {\n      if (grid.get(current.value) === ' ' || grid.get(current.value) === undefined) {\n        break mainLoop\n      }\n      visited.set(current.value, true)\n      // First step\n      const adjacents = getAdjacentPositionsArray(current.value)\n        // No walls\n        .filter(pos => grid.get(pos) !== '#')\n        // Nowhere we've already been on this search\n        .filter(pos => !visited.get(pos))\n        // Sort by distance from the target\n        .sort((a, b) => (\n          manhattanDistance(parseGridString(end), parseGridString(a))\n            - manhattanDistance(parseGridString(end), parseGridString(b))\n        ))\n      adjacents.forEach(adjacent => { current.push(adjacent) })\n    }\n    const indexOfNextBranch = current.branches.findIndex(\n      branch => typeof branch.value === 'string' && !visited.get(branch.value)\n    )\n    if (indexOfNextBranch !== -1) current = current.branches[indexOfNextBranch]\n    else {\n      // Gotta go back up the tree, I guess\n      if (current.parent) current = current.parent\n      else {\n        // This else means that there is no path to the thing. So what we should do there is,\n        // the first time it happens, we should then look at our map and figure out what we think\n        // the edges are, and the findNearestUnknownSquare algorithm shouldn't check beyond there.\n        // We should also create a \"forbidden\" list that the unknown square algorithm won't return,\n        // for the few inaccessible squares that are actually within our grid.\n        forbidden.push(end)\n        let minX = Number.MAX_SAFE_INTEGER\n        let minY = Number.MAX_SAFE_INTEGER\n        let maxX = Number.MIN_SAFE_INTEGER\n        let maxY = Number.MIN_SAFE_INTEGER\n        for (let key of grid.keys()) {\n          const [ x, y ] = parseGridString(key)\n          minX = Math.min(minX, x)\n          minY = Math.min(minY, y)\n          maxX = Math.max(maxX, x)\n          maxY = Math.max(maxY, y)\n        }\n        goodXMin = minX\n        goodYMin = minY\n        goodXMax = maxX\n        goodYMax = maxY\n        return undefined\n      }\n    }\n  }\n\n  return current.getPathToHead().slice(0, -1).reverse() as string[]\n}\n\nconst getNextStep = (): -1 | 1 | 2 | 3 | 4 => {\n  // I should find the nearest unknown square and take one step toward it\n  const [ x, y ] = parseGridString(droidPosition)\n  let path: undefined | string[] = undefined\n\n  while (!path) {\n    const target = findNearestUnknownSquare()\n    if (!target.length) return -1\n    path = findShortestPath(droidPosition, target)\n  }\n\n  const nextStep = parseGridString(path[0])\n\n  // north (1), south (2), west (3), and east (4).\n  if (nextStep[1] < y) return 1\n  if (nextStep[1] > y) return 2\n  if (nextStep[0] < x) return 3\n  if (nextStep[0] > x) return 4\n\n  throw new Error('fuck')\n}\n\n// Movement input commands: north (1), south (2), west (3), and east (4). Any other command is invalid.\n// Response status codes\n// 0: The repair droid hit a wall. Its position has not changed.\n// 1: The repair droid has moved one step in the requested direction.\n// 2: The repair droid has moved one step in the requested direction; its new position is the location of the oxygen system.\nconst repairDroidLoop = (input: number): { response: number } => {\n  // Accept a movement command via an input instruction.\n  if (input < 1 || input > 4) throw new Error('fuck')\n  // Send the movement command to the repair droid.\n  // Wait for the repair droid to finish the movement operation.\n  intcodeComputerResults = intcodeComputer2019(program, [input], true, instructionPointer, relativeBase)\n  instructionPointer = intcodeComputerResults.instructionPointer\n  outputs = intcodeComputerResults.outputs\n  relativeBase = intcodeComputerResults.relativeBase\n  program = intcodeComputerResults.program\n\n  // Report on the status of the repair droid via an output instruction.\n  return {\n    response: outputs[outputs.length - 1]\n  }\n}\n\nconst parseInput = (inputKey: string): number[] =>\n  INPUT[inputKey].split(',').map(inputStr => parseInt(inputStr))\n\nconst renderGrid = () => {\n  let minX = Number.MAX_SAFE_INTEGER\n  let minY = Number.MAX_SAFE_INTEGER\n\n  for (let key of grid.keys()) {\n    const [ x, y ] = parseGridString(key)\n    minX = Math.min(minX, x)\n    minY = Math.min(minY, y)\n  }\n\n  const xOffset = minX * -1\n  const yOffset = minY * -1\n\n  const field: ('D' | '#' | '.' | ' ' | 'X' | 'O')[][] = []\n\n  for (let [key, value] of grid.entries()) {\n    const [ x, y ] = parseGridString(key)\n    const fieldX = x + xOffset\n    const fieldY = y + yOffset\n    if (!field[fieldY]) field[fieldY] = []\n    field[fieldY][fieldX] = value\n  }\n\n  const screen: string[] = []\n\n  for (let i = 0; i < field.length; i++) {\n    const row = field[i]\n    let rowStr = ''\n    for (let j = 0; j < row.length; j++) {\n      rowStr += (field[i][j] === undefined ? ' ' : field[i][j])\n    }\n    screen.push(rowStr)\n  }\n\n  return (\n    <pre>\n      {screen.join('\\n')}\n    </pre>\n  )\n}\n\nconst renderDay = (dayConfig: IDayConfig, inputKey: string) => {\n  return (\n    <div>\n      <h3>Input: {dayConfig.INPUT[inputKey]}</h3>\n      <h3>Program: {program.join(',')}</h3>\n      <h3>Droid Position: {droidPosition}</h3>\n      {oxyPosition.length > 0 && <h3>Oxygen Position: {oxyPosition}</h3>}\n      {renderGrid()}\n    </div>\n  )\n}\n\nconst setUnknownAdjacentsToUnknown = () => {\n  const adjacent = getAdjacentPositions(droidPosition)\n  if (!grid.has(adjacent.n)) grid.set(adjacent.n, ' ')\n  if (!grid.has(adjacent.e)) grid.set(adjacent.e, ' ')\n  if (!grid.has(adjacent.s)) grid.set(adjacent.s, ' ')\n  if (!grid.has(adjacent.w)) grid.set(adjacent.w, ' ')\n}\n\n// returns whether or not it is standing on the oxygen system after the one step it takes\nconst takeOneStep = (): boolean => {\n  const input = getNextStep()\n  if (input === -1) {\n    doneWithMapping = true\n    return false\n  }\n  const droidResult = repairDroidLoop(input)\n  setUnknownAdjacentsToUnknown()\n  const adjacentPositions = getAdjacentPositions(droidPosition)\n\n  stepsTaken++\n\n  const newPosition = droidResult.response === 0\n    ? droidPosition\n    : input === 1\n      ? adjacentPositions.n\n      : input === 2\n        ? adjacentPositions.s\n        : input === 3\n          ? adjacentPositions.w\n          : input === 4\n            ? adjacentPositions.e\n            : droidPosition\n\n  switch (droidResult.response) {\n    case 0: // Hit a wall, position unchanged\n      switch (input) {\n        case 1:\n          grid.set(adjacentPositions.n, '#')\n          break\n\n        case 2:\n          grid.set(adjacentPositions.s, '#')\n          break\n\n        case 3:\n          grid.set(adjacentPositions.w, '#')\n          break\n\n        case 4:\n          grid.set(adjacentPositions.e, '#')\n          break\n\n        default:\n          throw new Error('fuck')\n      }\n      break\n\n    case 2: // ...new position is the location of the oxygen system.\n      oxyPosition = newPosition\n\n    case 1: // Moved one step in the requested direction\n    case 2: // Moved one step in the requested direction...\n      const oldPosition = droidPosition === oxyPosition ? 'X' : '.'\n      grid.set(droidPosition, oldPosition)\n      grid.set(newPosition, 'D')\n      droidPosition = newPosition\n      break\n\n    default:\n      throw new Error('fuck')\n  }\n\n  return droidResult.response === 2\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Initialize/Reset Program (Click Me First)',\n    onClick: (inputKey: string) => {\n      program = parseInput(inputKey)\n      outputs = []\n      intcodeComputerResults = {\n        finished: false,\n        instructionPointer: 0,\n        outputs: [],\n        relativeBase: 0,\n        program\n      }\n      stepsTaken = 0\n\n      grid = new Map()\n      droidPosition = '0,0'\n      oxyPosition = ''\n      grid.set(droidPosition, 'D')\n      forbidden = []\n      doneWithMapping = false\n      timeSinceRepair = 0\n\n      goodXMin = Number.MIN_SAFE_INTEGER\n      goodYMin = Number.MIN_SAFE_INTEGER\n      goodXMax = Number.MAX_SAFE_INTEGER\n      goodYMax = Number.MAX_SAFE_INTEGER\n\n      setUnknownAdjacentsToUnknown()\n\n      return {}\n    }\n  },\n  {\n    label: 'Take One Step',\n    onClick: () => {\n      takeOneStep()\n      return {}\n    }\n  },\n  {\n    label: 'Map It Out',\n    onClick: () => {\n      while (!doneWithMapping) {\n        takeOneStep()\n      }\n      return {}\n    }\n  },\n  {\n    label: 'Repair Oxygen System',\n    onClick: () => {\n      if (!doneWithMapping) throw new Error('You can\\'t do this until you\\'re finished mapping!')\n\n      const path = findShortestPath('0,0', oxyPosition)\n\n      if (!path) throw new Error('fuck')\n      grid.set(oxyPosition, 'O')\n      timeSinceRepair = 0\n\n      return {\n        answer1: path.length.toString()\n      }\n    }\n  },\n  {\n    label: 'Wait One Minute',\n    onClick: () => {\n      advanceOxygen()\n\n      return {}\n    }\n  },\n  {\n    label: 'Fill with Oxygen',\n    onClick: () => {\n      while (!fullOfOxygen()) advanceOxygen()\n\n      return {\n        answer2: timeSinceRepair.toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      It would require <code>{answer}</code> movement commands{' '}\n      to move the droid from the starting position to the oxygen system.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      It takes <code>{answer}</code> minutes to fill the space with oxygen.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 15,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => renderDay(dayConfig, inputKey),\n  title: 'Oxygen System'\n}\n\nexport default config\n","/Users/kylegsessions/projects/advent-of-code/src/2019/Day16.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day8.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day1.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day1.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day7.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day12.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day21.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day8.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day15.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day4.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day21.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day23.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day17.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day15.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/utils/Tree.ts",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day17.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day12.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day20.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day14.tsx",["637"],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day7.tsx",["638","639"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day17.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day10.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day22.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/App.tsx",["640","641","642","643"],"import React, { Component } from 'react'\nimport {\n  IDayConfig,\n  YEARS\n} from './Config'\n\nclass App extends Component<{}, {\n  answer1: false | string | JSX.Element\n  answer2: false | string | JSX.Element\n  day: number\n  inputKey: string\n  year: number\n  other?: any\n}> {\n  constructor(props: {}) {\n    super(props)\n\n    this.state = {\n      answer1: false,\n      answer2: false,\n      day: 0,\n      inputKey: '',\n      year: 0\n    }\n  }\n\n  handleButtonClick = (onClick: (input: string) => {\n    answer1?: string | JSX.Element\n    answer2?: string | JSX.Element\n  }) => {\n    const {\n      answer1,\n      answer2,\n      inputKey\n    } = this.state\n\n    const result = onClick(inputKey)\n\n    this.setState({\n      answer1: typeof result.answer1 !== 'undefined' ? result.answer1 : answer1,\n      answer2: typeof result.answer2 !== 'undefined' ? result.answer2 : answer2\n    })\n  }\n\n  handleDayChange = (e: React.FormEvent<HTMLSelectElement>) => {\n    this.setState({\n      answer1: false,\n      answer2: false,\n      day: parseInt(e.currentTarget.value),\n      inputKey: ''\n    })\n  }\n\n  handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    this.setState({\n      answer1: false,\n      answer2: false,\n      inputKey: e.currentTarget.value\n    })\n  }\n\n  handleYearChange = (e: React.FormEvent<HTMLSelectElement>) => {\n    this.setState({\n      answer1: false,\n      answer2: false,\n      day: 0,\n      inputKey: '',\n      year: parseInt(e.currentTarget.value)\n    })\n  }\n\n  reset = () => this.setState({ year: 0, day: 0})\n\n  setOther = (other: any) => this.setState({ other })\n\n  render() {\n    const {\n      answer1,\n      answer2,\n      day,\n      inputKey,\n      year\n    } = this.state\n\n    const yearOptions = YEARS.map(YEAR => (\n      <option\n        key={YEAR.year}\n        value={YEAR.year}\n      >\n        {YEAR.year}\n      </option>\n    ))\n    yearOptions.unshift((\n      <option\n        key=\"xx\"\n        value={0}\n      >\n        20xx\n      </option>\n    ))\n\n    const yearConfig = YEARS.find(YEAR => YEAR.year === year)\n    let dayOptions: JSX.Element[] = []\n    let dayConfig: IDayConfig | undefined = undefined\n    if (yearConfig) {\n      dayOptions = yearConfig.days.map(DAY => (\n        <option\n          key={DAY.day}\n          value={DAY.day}\n        >\n          {DAY.day < 10 ? '0' : ''}{DAY.day}\n        </option>\n      ))\n      dayConfig = yearConfig.days.find(fDay => fDay.day === day)\n    }\n    dayOptions.unshift((\n      <option\n        key=\"xx\"\n        value={0}\n      >\n        xx\n      </option>\n    ))\n\n    const inputSelectors: JSX.Element[] = []\n    if (dayConfig) {\n      const { INPUT } = dayConfig\n      for (const key of Object.keys(INPUT)) {\n        inputSelectors.push((\n          <label\n            key={key}\n            className=\"input-selector__item__label\"\n          >\n            <input\n              className=\"input-selector__item__input\"\n              type=\"radio\"\n              name=\"inputType\"\n              value={key}\n              checked={inputKey === key}\n              onChange={this.handleInputChange}\n            />\n            {key}\n          </label>\n        ))\n      }\n    }\n\n    return (\n      <div>\n        <header>\n          <h1>\n            <a onClick={this.reset}>Coding Advent Challenge Solution Suite</a>\n          </h1>\n          <nav>\n            <span className=\"wrapper\">\n              year=\n            </span>\n            <select\n              onChange={this.handleYearChange}\n              value={year}\n            >\n              {yearOptions}\n            </select>\n            {' '}\n            <span className=\"wrapper\">\n              day=\n            </span>\n            <select\n              onChange={this.handleDayChange}\n              value={day}\n            >\n              {dayOptions}\n            </select>\n          </nav>\n        </header>\n        <article>\n          <h2>\n            ---{' '}\n            {dayConfig && dayConfig.title.length > 0\n              ? `Day ${day < 10 ? `0${day}` : day}: ${dayConfig.title}`\n              : 'Advent of Code Coding Challenge'\n            }\n            {' '}---\n            {' '}\n            {day > 0 && (\n              <a\n                target=\"_blank\"\n                href={`https://adventofcode.com/${year}/day/${day}`}\n              >View Challenge</a>\n            )}\n          </h2>\n          {!yearConfig && (\n            <p>\n              Check out my solutions for the{' '}\n              <a\n                target=\"_blank\"\n                href=\"https://adventofcode.com\"\n              >\n                Advent of Code Coding Challenge\n              </a>\n              {' '}challenges! To get started, select a year and day above.{' '}\n              Please note that there's no way for you to enter your custom unique{' '}\n              puzzle inputs into my UI here ... If you want to use my package to solve{' '}\n              the challenges and <span style={{ textDecoration: 'line-through' }}>earn</span>{' '}\n              get your stars, you're going to have to go get{' '}\n              <a href=\"https://github.com/kage23/advent-of-code\">my repository</a>{' '}\n              and figure it out!\n            </p>\n          )}\n          {yearConfig && !dayConfig && (\n            <div>\n              <p>\n                Welcome to my {year} Advent of Code Coding Challenge solution suite! Select a day above to see my solution{' '}\n                for that day's challenges. Check out my overall year progress:\n              </p>\n              <img\n                className=\"year-cover-image\"\n                src={yearConfig.cover}\n              />\n              {yearConfig.extraText && <p>{yearConfig.extraText}</p>}\n            </div>\n          )}\n          {dayConfig && (\n            <div>\n              <div className=\"control-boxes\">\n                <fieldset className=\"input-selector\">\n                  <label className=\"input-selector__label\">\n                    Select an input:\n                  </label>\n                  {inputSelectors}\n                </fieldset>\n                {dayConfig.buttons.length > 0 && (\n                  <fieldset className=\"control-buttons\">\n                    {dayConfig.buttons.map((buttonConfig, i) => (\n                      <button\n                        key={i}\n                        onClick={() => this.handleButtonClick(buttonConfig.onClick)}\n                        disabled={inputKey.length === 0}\n                      >\n                        {buttonConfig.label}\n                      </button>\n                    ))}\n                  </fieldset>\n                )}\n                {(\n                  (answer1 !== false && typeof answer1 !== 'undefined')\n                  || (answer2 !== false && typeof answer2 !== 'undefined')\n                ) && (\n                  <div className=\"answers\">\n                    {answer1 !== false && typeof answer1 !== 'undefined' && (\n                      <fieldset>\n                        <p>\n                          Answer 1:{' '}\n                          {dayConfig.answer1Text(answer1, inputKey)}\n                        </p>\n                      </fieldset>\n                    )}\n                    {answer2 !== false && typeof answer2 !== 'undefined' && (\n                      <fieldset>\n                        <p>\n                          Answer 2:{' '}\n                          {dayConfig.answer2Text(answer2, inputKey)}\n                        </p>\n                      </fieldset>\n                    )}\n                  </div>\n                )}\n              </div>\n              {inputKey.length > 0 && dayConfig.renderDay(dayConfig, inputKey, answer1, answer2, this.setOther)}\n            </div>\n          )}\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default App","/Users/kylegsessions/projects/advent-of-code/src/2015/Config.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day24.tsx",["644"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day6.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day19.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day15.tsx",["645","646","647","648"],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day10.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day16.tsx",["649"],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day24.tsx",["650"],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day16.tsx",["651"],"/Users/kylegsessions/projects/advent-of-code/src/utils/DLL.ts",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day7.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day15.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day12.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day17.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day19.tsx",["652","653"],"import React from 'react'\nimport {\n  IButton,\n  IDayConfig\n} from '../Config'\nimport { intcodeComputer2019 } from '../utils/Various'\n\nimport INPUT from './Input/Day19'\n\nconst size = 50\n\nlet program: number[] = []\n\nlet map: string[][] = []\n\nconst parseGridString = (str: string): number[] => str.split(',').map(i => parseInt(i))\nconst renderGridString = (pos: number[]): string => pos.join(',')\n\nconst parseInput = (inputKey: string): number[] =>\n  INPUT[inputKey].split(',').map(inputStr => parseInt(inputStr))\n\nconst renderDay = (dayConfig: IDayConfig, inputKey: string) => {\n  return (\n    <div>\n      <h3>Input: {dayConfig.INPUT[inputKey]}</h3>\n      <h3>Program: {program.join(',')}</h3>\n      {map.length > 0 && (\n        <div>\n          <h3>Map:</h3>\n          <pre>{map.filter(row => row !== undefined).map(row => row.join('')).join('\\n')}</pre>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Initialize/Reset Program (Click Me First)',\n    onClick: (inputKey: string) => {\n      program = parseInput(inputKey)\n\n      return {}\n    }\n  },\n  {\n    label: 'Map Tractor Beam',\n    onClick: () => {\n      let count = 0\n      map = []\n\n      for (let y = 0; y < size; y++) {\n        if (!map[y]) map[y] = []\n        for (let x = 0; x < size; x++) {\n          // console.log(`Checking ${x}, ${y}...`)\n          const result = intcodeComputer2019(program, [x, y])\n          if (result.outputs[0]) {\n            map[y][x] = '#'\n            count++\n            console.log(`Tractor Beam at [${x}, ${y}]`)\n          } else map[y][x] = '.'\n        }\n      }\n\n      return {\n        answer1: count.toString()\n      }\n    }\n  },\n  {\n    label: 'Find Place for Ship',\n    onClick: () => {\n      // Starting at [599, 390] as the upper-right corner (which I found in experimentation and testing),\n      // check to see if all four corners are within the beam. If not, move down one, then keep moving\n      // right until the edge of the beam, then check all four corners from there.\n\n      const getCorners = (upperRight: [number, number]): [\n        [number, number],\n        [number, number],\n        [number, number],\n        [number, number]\n      ] => {\n        const [ x, y ] = upperRight\n        return [\n          [x - 99, y],\n          [x, y],\n          [x - 99, y + 99],\n          [x, y + 99]\n        ]\n      }\n\n      const isNodeInBeam = (node: [number, number]): boolean => {\n        const result = intcodeComputer2019(program, node)\n        if (result.outputs[0] === 1) return true\n        return false\n      }\n\n      const getNextNode = (node: [number, number]): [number, number] => {\n        let [ x, y ] = node\n        // First, go down one\n        y++\n        // Verify that you're still in the beam\n        if (!isNodeInBeam([x, y])) throw new Error('fuck')\n        // Then go right until you're out of the beam\n        while (isNodeInBeam([x, y])) x++\n        // Now that you're out of the beam, go back left one to get back in the beam\n        x--\n        // That's the next node\n        return [x, y]\n      }\n\n      const allFourCornersWithin = (upperRight: [number, number]): boolean => {\n        console.log(`Checking four corners of upper right: ${JSON.stringify(upperRight)}`)\n        return getCorners(upperRight).every(corner => isNodeInBeam(corner))\n      }\n\n      let currentNode: [number, number] = [599, 390]\n\n      while (!allFourCornersWithin(currentNode)) {\n        currentNode = getNextNode(currentNode)\n      }\n\n      const goodCorners = getCorners(currentNode)\n      const [ [ x, y ] ] = goodCorners\n\n      return {\n        answer2: ((x * 10000) + y).toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      The number of points affected by the tractor beam in the 50x50 area closest to the emitter is{' '}\n      <code>{answer}</code>.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      The upper left corner of a good spot for the ship is <code>{answer}</code>.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 19,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => renderDay(dayConfig, inputKey),\n  title: 'Tractor Beam'\n}\n\nexport default config\n","/Users/kylegsessions/projects/advent-of-code/src/2019/Day7.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day7.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day2.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day4.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day21.tsx",["654","655","656","657"],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day23.tsx",["658"],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day11.tsx",["659","660"],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day12.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day21.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day12.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day18.tsx",["661"],"/Users/kylegsessions/projects/advent-of-code/src/2016/Day25.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day7.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Day21.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day21.tsx",["662","663","664"],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day10.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Day3.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day4.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2015/Input/Day15.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day2.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day9.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day6.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day5.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2019/Input/Day18.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2017/Input/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2016/Input/Day23.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day23.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day12.tsx",["665"],"/Users/kylegsessions/projects/advent-of-code/src/2018/Day2.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day23.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day19.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day14.tsx",[],"/Users/kylegsessions/projects/advent-of-code/src/2018/Input/Day4.tsx",[],{"ruleId":"666","replacedBy":"667"},{"ruleId":"668","replacedBy":"669"},{"ruleId":"670","severity":1,"message":"671","line":3,"column":3,"nodeType":"672","messageId":"673","endLine":3,"endColumn":19},{"ruleId":"666","replacedBy":"674"},{"ruleId":"668","replacedBy":"675"},{"ruleId":"666","replacedBy":"676"},{"ruleId":"668","replacedBy":"677"},{"ruleId":"678","severity":1,"message":"679","line":136,"column":28,"nodeType":"680","messageId":"681","endLine":155,"endColumn":14},{"ruleId":"682","severity":1,"message":"683","line":254,"column":15,"nodeType":"672","messageId":"684","endLine":254,"endColumn":23,"fix":"685"},{"ruleId":"678","severity":1,"message":"686","line":268,"column":25,"nodeType":"680","messageId":"681","endLine":268,"endColumn":63},{"ruleId":"687","severity":1,"message":"688","line":56,"column":3,"nodeType":"672","messageId":"689","endLine":56,"endColumn":13,"fix":"690"},{"ruleId":"670","severity":1,"message":"691","line":1,"column":8,"nodeType":"672","messageId":"673","endLine":1,"endColumn":11},{"ruleId":"678","severity":1,"message":"692","line":59,"column":35,"nodeType":"680","messageId":"681","endLine":61,"endColumn":8},{"ruleId":"678","severity":1,"message":"692","line":65,"column":37,"nodeType":"680","messageId":"681","endLine":67,"endColumn":10},{"ruleId":"682","severity":1,"message":"693","line":75,"column":62,"nodeType":"672","messageId":"684","endLine":75,"endColumn":69,"fix":"694"},{"ruleId":"682","severity":1,"message":"693","line":108,"column":13,"nodeType":"672","messageId":"684","endLine":108,"endColumn":20,"fix":"695"},{"ruleId":"696","severity":1,"message":"697","line":17,"column":24,"nodeType":"698","messageId":"699","endLine":17,"endColumn":98},{"ruleId":"700","severity":1,"message":"701","line":79,"column":20,"nodeType":"702","messageId":"684","endLine":79,"endColumn":22},{"ruleId":"678","severity":1,"message":"703","line":66,"column":46,"nodeType":"680","messageId":"681","endLine":73,"endColumn":8},{"ruleId":"678","severity":1,"message":"704","line":100,"column":48,"nodeType":"680","messageId":"681","endLine":110,"endColumn":6},{"ruleId":"682","severity":1,"message":"683","line":124,"column":15,"nodeType":"672","messageId":"684","endLine":124,"endColumn":23,"fix":"705"},{"ruleId":"678","severity":1,"message":"706","line":130,"column":17,"nodeType":"680","messageId":"681","endLine":130,"endColumn":45},{"ruleId":"678","severity":1,"message":"686","line":138,"column":25,"nodeType":"680","messageId":"681","endLine":138,"endColumn":63},{"ruleId":"707","severity":1,"message":"708","line":337,"column":5,"nodeType":"709","messageId":"710","endLine":337,"endColumn":12},{"ruleId":"711","severity":1,"message":"712","line":338,"column":5,"nodeType":"709","messageId":"684","endLine":343,"endColumn":12},{"ruleId":"670","severity":1,"message":"713","line":365,"column":7,"nodeType":"672","messageId":"673","endLine":365,"endColumn":17},{"ruleId":"670","severity":1,"message":"714","line":195,"column":7,"nodeType":"672","messageId":"673","endLine":195,"endColumn":8},{"ruleId":"678","severity":1,"message":"715","line":42,"column":48,"nodeType":"680","messageId":"681","endLine":42,"endColumn":103},{"ruleId":"678","severity":1,"message":"715","line":96,"column":35,"nodeType":"680","messageId":"681","endLine":96,"endColumn":90},{"ruleId":"716","severity":1,"message":"717","line":152,"column":13,"nodeType":"718","endLine":152,"endColumn":37},{"ruleId":"719","severity":1,"message":"720","line":187,"column":17,"nodeType":"721","endLine":187,"endColumn":32},{"ruleId":"719","severity":1,"message":"720","line":196,"column":17,"nodeType":"721","endLine":196,"endColumn":32},{"ruleId":"722","severity":1,"message":"723","line":216,"column":15,"nodeType":"718","endLine":219,"endColumn":17},{"ruleId":"670","severity":1,"message":"724","line":25,"column":13,"nodeType":"672","messageId":"673","endLine":25,"endColumn":24},{"ruleId":"725","severity":1,"message":"726","line":20,"column":20,"nodeType":"727","messageId":"728","endLine":20,"endColumn":22},{"ruleId":"725","severity":1,"message":"726","line":21,"column":5,"nodeType":"727","messageId":"728","endLine":21,"endColumn":7},{"ruleId":"725","severity":1,"message":"729","line":21,"column":5,"nodeType":"727","messageId":"728","endLine":21,"endColumn":7},{"ruleId":"725","severity":1,"message":"729","line":21,"column":23,"nodeType":"727","messageId":"728","endLine":21,"endColumn":25},{"ruleId":"678","severity":1,"message":"730","line":97,"column":13,"nodeType":"680","messageId":"681","endLine":99,"endColumn":6},{"ruleId":"670","severity":1,"message":"731","line":92,"column":7,"nodeType":"672","messageId":"673","endLine":92,"endColumn":12},{"ruleId":"682","severity":1,"message":"732","line":90,"column":19,"nodeType":"672","messageId":"684","endLine":90,"endColumn":26,"fix":"733"},{"ruleId":"670","severity":1,"message":"734","line":16,"column":7,"nodeType":"672","messageId":"673","endLine":16,"endColumn":22},{"ruleId":"670","severity":1,"message":"735","line":17,"column":7,"nodeType":"672","messageId":"673","endLine":17,"endColumn":23},{"ruleId":"707","severity":1,"message":"708","line":52,"column":5,"nodeType":"709","messageId":"710","endLine":60,"endColumn":17},{"ruleId":"736","severity":1,"message":"737","line":73,"column":3,"nodeType":"738","messageId":"739","endLine":73,"endColumn":73},{"ruleId":"707","severity":1,"message":"708","line":102,"column":5,"nodeType":"709","messageId":"710","endLine":105,"endColumn":94},{"ruleId":"736","severity":1,"message":"737","line":110,"column":3,"nodeType":"738","messageId":"739","endLine":110,"endColumn":73},{"ruleId":"707","severity":1,"message":"740","line":118,"column":5,"nodeType":"709","messageId":"741","endLine":119,"endColumn":12},{"ruleId":"707","severity":1,"message":"740","line":131,"column":11,"nodeType":"709","messageId":"741","endLine":132,"endColumn":18},{"ruleId":"707","severity":1,"message":"740","line":188,"column":11,"nodeType":"709","messageId":"741","endLine":189,"endColumn":18},{"ruleId":"670","severity":1,"message":"691","line":1,"column":8,"nodeType":"672","messageId":"673","endLine":1,"endColumn":11},{"ruleId":"670","severity":1,"message":"742","line":58,"column":7,"nodeType":"672","messageId":"673","endLine":58,"endColumn":25},{"ruleId":"670","severity":1,"message":"743","line":59,"column":7,"nodeType":"672","messageId":"673","endLine":59,"endColumn":19},{"ruleId":"670","severity":1,"message":"744","line":60,"column":7,"nodeType":"672","messageId":"673","endLine":60,"endColumn":14},{"ruleId":"678","severity":1,"message":"745","line":105,"column":32,"nodeType":"680","messageId":"681","endLine":105,"endColumn":73},"no-native-reassign",["746"],"no-negated-in-lhs",["747"],"@typescript-eslint/no-unused-vars","'defaultRenderDay' is defined but never used.","Identifier","unusedVar",["746"],["747"],["746"],["747"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'currentNode', 'currentNode', 'currentNode', 'currentNode', 'currentNode', 'currentNode', 'shortestPathLength', 'currentNode', 'currentNode', 'currentNode'.","ArrowFunctionExpression","unsafeRefs","no-extra-label","This label 'mainLoop' is unnecessary.","unexpected",{"range":"748","text":"749"},"Function declared in a loop contains unsafe references to variable(s) 'current'.","no-unused-labels","'searchLoop:' is defined but never used.","unused",{"range":"750","text":"749"},"'md5' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'nextMolecules'.","This label 'botLoop' is unnecessary.",{"range":"751","text":"749"},{"range":"752","text":"749"},"no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","Function declared in a loop contains unsafe references to variable(s) 'grid', 'grid'.","Function declared in a loop contains unsafe references to variable(s) 'forbidden', 'goodXMin', 'goodXMax', 'goodYMin', 'goodYMax'.",{"range":"753","text":"749"},"Function declared in a loop contains unsafe references to variable(s) 'grid'.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-duplicate-case","Duplicate case label.","'stepsTaken' is assigned a value but never used.","'i' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'stepsCompleted'.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ISearchNode' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","Function declared in a loop contains unsafe references to variable(s) 'currentSample', 'currentSample'.","'count' is assigned a value but never used.","This label 'keyLoop' is unnecessary.",{"range":"754","text":"749"},"'parseGridString' is assigned a value but never used.","'renderGridString' is assigned a value but never used.","no-unreachable","Unreachable code.","ThrowStatement","unreachableCode","Expected a 'break' statement before 'default'.","default","'instructionPointer' is assigned a value but never used.","'relativeBase' is assigned a value but never used.","'outputs' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'next'.","no-global-assign","no-unsafe-negation",[9394,9403],"",[1292,1306],[2010,2018],[3087,3095],[3555,3564],[2219,2227]]