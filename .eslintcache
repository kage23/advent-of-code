[{"/Users/ksessions/work/gitrepos/advent-of-code/src/index.tsx":"1","/Users/ksessions/work/gitrepos/advent-of-code/src/Config.tsx":"2","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day10.tsx":"3","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day19.tsx":"4","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day3.tsx":"5","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day6.tsx":"6","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day18.tsx":"7","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day19.tsx":"8","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day20.tsx":"9","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day22.tsx":"10","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day7.tsx":"11","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day14.tsx":"12","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day20.tsx":"13","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day2.tsx":"14","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day22.tsx":"15","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day12.tsx":"16","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day6.tsx":"17","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day11.tsx":"18","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day9.tsx":"19","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day14.tsx":"20","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day18.tsx":"21","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day15.tsx":"22","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day5.tsx":"23","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day9.tsx":"24","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day20.tsx":"25","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day5.tsx":"26","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day9.tsx":"27","/Users/ksessions/work/gitrepos/advent-of-code/src/App.tsx":"28","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day7.tsx":"29","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day11.tsx":"30","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day14.tsx":"31","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day17.tsx":"32","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day22.tsx":"33","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day23.tsx":"34","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day25.tsx":"35","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day21.tsx":"36","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day4.tsx":"37","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day13.tsx":"38","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day19.tsx":"39","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day12.tsx":"40","/Users/ksessions/work/gitrepos/advent-of-code/src/utils/DLL.ts":"41","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day3.tsx":"42","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day7.tsx":"43","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day15.tsx":"44","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day1.tsx":"45","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day13.tsx":"46","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day16.tsx":"47","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day12.tsx":"48","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day24.tsx":"49","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day23.tsx":"50","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day20.tsx":"51","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day6.tsx":"52","/Users/ksessions/work/gitrepos/advent-of-code/src/utils/Operations.ts":"53","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day3.tsx":"54","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day2.tsx":"55","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day24.tsx":"56","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day6.tsx":"57","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day15.tsx":"58","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day10.tsx":"59","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day23.tsx":"60","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day2.tsx":"61","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day14.tsx":"62","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day4.tsx":"63","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day21.tsx":"64","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day16.tsx":"65","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day22.tsx":"66","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day3.tsx":"67","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day23.tsx":"68","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day20.tsx":"69","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day1.tsx":"70","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day4.tsx":"71","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day12.tsx":"72","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day21.tsx":"73","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day7.tsx":"74","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day24.tsx":"75","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day8.tsx":"76","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day4.tsx":"77","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day9.tsx":"78","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day25.tsx":"79","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day4.tsx":"80","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day24.tsx":"81","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day11.tsx":"82","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day19.tsx":"83","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day23.tsx":"84","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day11.tsx":"85","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day21.tsx":"86","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day14.tsx":"87","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day3.tsx":"88","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day20.tsx":"89","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day4.tsx":"90","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day8.tsx":"91","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day9.tsx":"92","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day13.tsx":"93","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day18.tsx":"94","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day1.tsx":"95","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day7.tsx":"96","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day10.tsx":"97","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day14.tsx":"98","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day5.tsx":"99","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day16.tsx":"100","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day21.tsx":"101","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day15.tsx":"102","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day8.tsx":"103","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day19.tsx":"104","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day9.tsx":"105","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day25.tsx":"106","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day5.tsx":"107","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day11.tsx":"108","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day9.tsx":"109","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day2.tsx":"110","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day22.tsx":"111","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day1.tsx":"112","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day6.tsx":"113","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day24.tsx":"114","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day12.tsx":"115","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day24.tsx":"116","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day15.tsx":"117","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day10.tsx":"118","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day1.tsx":"119","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day2.tsx":"120","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day18.tsx":"121","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day13.tsx":"122","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day23.tsx":"123","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day15.tsx":"124","/Users/ksessions/work/gitrepos/advent-of-code/src/utils/Tree.ts":"125","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day16.tsx":"126","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day5.tsx":"127","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day13.tsx":"128","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day7.tsx":"129","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day12.tsx":"130","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day21.tsx":"131","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day4.tsx":"132","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day13.tsx":"133","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day22.tsx":"134","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day15.tsx":"135","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day9.tsx":"136","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day1.tsx":"137","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day22.tsx":"138","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day3.tsx":"139","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day15.tsx":"140","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day15.tsx":"141","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day10.tsx":"142","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day3.tsx":"143","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day22.tsx":"144","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day14.tsx":"145","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day2.tsx":"146","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day24.tsx":"147","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day9.tsx":"148","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day1.tsx":"149","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day13.tsx":"150","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day11.tsx":"151","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day2.tsx":"152","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day24.tsx":"153","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day25.tsx":"154","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day11.tsx":"155","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day24.tsx":"156","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day13.tsx":"157","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day6.tsx":"158","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day5.tsx":"159","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day15.tsx":"160","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day20.tsx":"161","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day14.tsx":"162","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day16.tsx":"163","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day3.tsx":"164","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day18.tsx":"165","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day12.tsx":"166","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day10.tsx":"167","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day11.tsx":"168","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day23.tsx":"169","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day19.tsx":"170","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day5.tsx":"171","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day18.tsx":"172","/Users/ksessions/work/gitrepos/advent-of-code/src/2020/Config.tsx":"173","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day10.tsx":"174","/Users/ksessions/work/gitrepos/advent-of-code/src/utils/Various.ts":"175","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day1.tsx":"176","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day18.tsx":"177","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day18.tsx":"178","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day18.tsx":"179","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day8.tsx":"180","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day23.tsx":"181","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day16.tsx":"182","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day16.tsx":"183","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day2.tsx":"184","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day8.tsx":"185","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day22.tsx":"186","/Users/ksessions/work/gitrepos/advent-of-code/src/utils/SLL.ts":"187","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day8.tsx":"188","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day17.tsx":"189","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day4.tsx":"190","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day17.tsx":"191","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day7.tsx":"192","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day10.tsx":"193","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day23.tsx":"194","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day5.tsx":"195","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Config.tsx":"196","/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day4.tsx":"197","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day8.tsx":"198","/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day6.tsx":"199","/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day20.tsx":"200","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day10.tsx":"201"},{"size":168,"mtime":1576883787607,"results":"202","hashOfConfig":"203"},{"size":1353,"mtime":1606759418362,"results":"204","hashOfConfig":"203"},{"size":1502,"mtime":1583264223048,"results":"205","hashOfConfig":"203"},{"size":4684,"mtime":1583264223057,"results":"206","hashOfConfig":"203"},{"size":2170,"mtime":1583264223063,"results":"207","hashOfConfig":"203"},{"size":3444,"mtime":1580582480327,"results":"208","hashOfConfig":"203"},{"size":13231,"mtime":1606761132486,"results":"209","hashOfConfig":"203"},{"size":2304,"mtime":1580582463682,"results":"210","hashOfConfig":"203"},{"size":4910,"mtime":1580582463692,"results":"211","hashOfConfig":"203"},{"size":10680,"mtime":1606762255889,"results":"212","hashOfConfig":"203"},{"size":3721,"mtime":1606761969727,"results":"213","hashOfConfig":"203"},{"size":898,"mtime":1583264223075,"results":"214","hashOfConfig":"203"},{"size":82,"mtime":1583264223083,"results":"215","hashOfConfig":"203"},{"size":495,"mtime":1580582480338,"results":"216","hashOfConfig":"203"},{"size":2122,"mtime":1580582480341,"results":"217","hashOfConfig":"203"},{"size":42509,"mtime":1583264223073,"results":"218","hashOfConfig":"203"},{"size":128,"mtime":1580582463538,"results":"219","hashOfConfig":"203"},{"size":175,"mtime":1580582414172,"results":"220","hashOfConfig":"203"},{"size":579,"mtime":1580582414154,"results":"221","hashOfConfig":"203"},{"size":101,"mtime":1580582463626,"results":"222","hashOfConfig":"203"},{"size":2248,"mtime":1580582906461,"results":"223","hashOfConfig":"203"},{"size":1797,"mtime":1580582906460,"results":"224","hashOfConfig":"203"},{"size":1973,"mtime":1580582906465,"results":"225","hashOfConfig":"203"},{"size":2874,"mtime":1580582906466,"results":"226","hashOfConfig":"203"},{"size":20598,"mtime":1580582906472,"results":"227","hashOfConfig":"203"},{"size":96,"mtime":1580582906476,"results":"228","hashOfConfig":"203"},{"size":12498,"mtime":1580582906478,"results":"229","hashOfConfig":"203"},{"size":7909,"mtime":1606760291469,"results":"230","hashOfConfig":"203"},{"size":3186,"mtime":1583264223067,"results":"231","hashOfConfig":"203"},{"size":2488,"mtime":1583264223049,"results":"232","hashOfConfig":"203"},{"size":2825,"mtime":1583264223052,"results":"233","hashOfConfig":"203"},{"size":2532,"mtime":1583264223055,"results":"234","hashOfConfig":"203"},{"size":6110,"mtime":1583264223060,"results":"235","hashOfConfig":"203"},{"size":2386,"mtime":1583264223061,"results":"236","hashOfConfig":"203"},{"size":1481,"mtime":1583264223062,"results":"237","hashOfConfig":"203"},{"size":4731,"mtime":1606762782302,"results":"238","hashOfConfig":"203"},{"size":1870,"mtime":1580582463519,"results":"239","hashOfConfig":"203"},{"size":6526,"mtime":1580582463613,"results":"240","hashOfConfig":"203"},{"size":4014,"mtime":1606761003820,"results":"241","hashOfConfig":"203"},{"size":4572,"mtime":1580582480313,"results":"242","hashOfConfig":"203"},{"size":1913,"mtime":1580582906484,"results":"243","hashOfConfig":"203"},{"size":8331,"mtime":1583264223087,"results":"244","hashOfConfig":"203"},{"size":5596,"mtime":1583264223090,"results":"245","hashOfConfig":"203"},{"size":506,"mtime":1583264223076,"results":"246","hashOfConfig":"203"},{"size":820,"mtime":1580582906466,"results":"247","hashOfConfig":"203"},{"size":90,"mtime":1580582906468,"results":"248","hashOfConfig":"203"},{"size":48594,"mtime":1580582463646,"results":"249","hashOfConfig":"203"},{"size":318,"mtime":1580582480331,"results":"250","hashOfConfig":"203"},{"size":431,"mtime":1580582463731,"results":"251","hashOfConfig":"203"},{"size":535,"mtime":1580582906474,"results":"252","hashOfConfig":"203"},{"size":7714,"mtime":1580582414247,"results":"253","hashOfConfig":"203"},{"size":5443,"mtime":1580582414218,"results":"254","hashOfConfig":"203"},{"size":3920,"mtime":1580582414241,"results":"255","hashOfConfig":"203"},{"size":2073,"mtime":1580582906465,"results":"256","hashOfConfig":"203"},{"size":3258,"mtime":1580582906462,"results":"257","hashOfConfig":"203"},{"size":12681,"mtime":1606762255889,"results":"258","hashOfConfig":"203"},{"size":5811,"mtime":1580582906476,"results":"259","hashOfConfig":"203"},{"size":966,"mtime":1580582906469,"results":"260","hashOfConfig":"203"},{"size":159,"mtime":1583264223071,"results":"261","hashOfConfig":"203"},{"size":409,"mtime":1583264223085,"results":"262","hashOfConfig":"203"},{"size":6938,"mtime":1580582414116,"results":"263","hashOfConfig":"203"},{"size":3312,"mtime":1580582480333,"results":"264","hashOfConfig":"203"},{"size":238,"mtime":1580582480346,"results":"265","hashOfConfig":"203"},{"size":463,"mtime":1580582414255,"results":"266","hashOfConfig":"203"},{"size":49347,"mtime":1580582414219,"results":"267","hashOfConfig":"203"},{"size":5983,"mtime":1580582463711,"results":"268","hashOfConfig":"203"},{"size":3170,"mtime":1580582463512,"results":"269","hashOfConfig":"203"},{"size":4359,"mtime":1606760352370,"results":"270","hashOfConfig":"203"},{"size":2865,"mtime":1583264223058,"results":"271","hashOfConfig":"203"},{"size":1831,"mtime":1580582414172,"results":"272","hashOfConfig":"203"},{"size":4434,"mtime":1580582414128,"results":"273","hashOfConfig":"203"},{"size":4690,"mtime":1606762270612,"results":"274","hashOfConfig":"203"},{"size":4447,"mtime":1580582414254,"results":"275","hashOfConfig":"203"},{"size":3690,"mtime":1580582463545,"results":"276","hashOfConfig":"203"},{"size":4521,"mtime":1580582463731,"results":"277","hashOfConfig":"203"},{"size":3293,"mtime":1580582480328,"results":"278","hashOfConfig":"203"},{"size":2975,"mtime":1580582480325,"results":"279","hashOfConfig":"203"},{"size":873,"mtime":1583264223092,"results":"280","hashOfConfig":"203"},{"size":172,"mtime":1583264223086,"results":"281","hashOfConfig":"203"},{"size":23270,"mtime":1580582463520,"results":"282","hashOfConfig":"203"},{"size":143,"mtime":1580582480344,"results":"283","hashOfConfig":"203"},{"size":2063,"mtime":1580582480331,"results":"284","hashOfConfig":"203"},{"size":573,"mtime":1580582414255,"results":"285","hashOfConfig":"203"},{"size":2085,"mtime":1580582906464,"results":"286","hashOfConfig":"203"},{"size":7506,"mtime":1580582906458,"results":"287","hashOfConfig":"203"},{"size":3331,"mtime":1580582906472,"results":"288","hashOfConfig":"203"},{"size":95,"mtime":1580582906469,"results":"289","hashOfConfig":"203"},{"size":27927,"mtime":1580582906475,"results":"290","hashOfConfig":"203"},{"size":15605,"mtime":1606760800621,"results":"291","hashOfConfig":"203"},{"size":1154,"mtime":1583264223064,"results":"292","hashOfConfig":"203"},{"size":2410,"mtime":1583264223068,"results":"293","hashOfConfig":"203"},{"size":2890,"mtime":1583264223069,"results":"294","hashOfConfig":"203"},{"size":3815,"mtime":1583264223051,"results":"295","hashOfConfig":"203"},{"size":3141,"mtime":1583264223056,"results":"296","hashOfConfig":"203"},{"size":3210,"mtime":1580582906457,"results":"297","hashOfConfig":"203"},{"size":2917,"mtime":1580582906466,"results":"298","hashOfConfig":"203"},{"size":4099,"mtime":1580582906457,"results":"299","hashOfConfig":"203"},{"size":3362,"mtime":1580582906459,"results":"300","hashOfConfig":"203"},{"size":2314,"mtime":1580582463529,"results":"301","hashOfConfig":"203"},{"size":3519,"mtime":1580582463645,"results":"302","hashOfConfig":"203"},{"size":3176,"mtime":1606760800621,"results":"303","hashOfConfig":"203"},{"size":13259,"mtime":1606761602284,"results":"304","hashOfConfig":"203"},{"size":6633,"mtime":1583264223091,"results":"305","hashOfConfig":"203"},{"size":1243,"mtime":1583264223081,"results":"306","hashOfConfig":"203"},{"size":16239,"mtime":1580582463565,"results":"307","hashOfConfig":"203"},{"size":17638,"mtime":1580582480345,"results":"308","hashOfConfig":"203"},{"size":3061,"mtime":1580582480347,"results":"309","hashOfConfig":"203"},{"size":2814,"mtime":1580582414172,"results":"310","hashOfConfig":"203"},{"size":3242,"mtime":1580582414153,"results":"311","hashOfConfig":"203"},{"size":2288,"mtime":1580582414116,"results":"312","hashOfConfig":"203"},{"size":135,"mtime":1580582414263,"results":"313","hashOfConfig":"203"},{"size":3597,"mtime":1580582414208,"results":"314","hashOfConfig":"203"},{"size":2847,"mtime":1583264223066,"results":"315","hashOfConfig":"203"},{"size":2855,"mtime":1583264223062,"results":"316","hashOfConfig":"203"},{"size":2090,"mtime":1580582906458,"results":"317","hashOfConfig":"203"},{"size":5817,"mtime":1606762712720,"results":"318","hashOfConfig":"203"},{"size":2531,"mtime":1606762373729,"results":"319","hashOfConfig":"203"},{"size":5128,"mtime":1580582480311,"results":"320","hashOfConfig":"203"},{"size":1753,"mtime":1580582480310,"results":"321","hashOfConfig":"203"},{"size":2523,"mtime":1580582906471,"results":"322","hashOfConfig":"203"},{"size":213,"mtime":1580582906471,"results":"323","hashOfConfig":"203"},{"size":382,"mtime":1580582463613,"results":"324","hashOfConfig":"203"},{"size":8106,"mtime":1580582480342,"results":"325","hashOfConfig":"203"},{"size":3450,"mtime":1580582480334,"results":"326","hashOfConfig":"203"},{"size":1377,"mtime":1580582906485,"results":"327","hashOfConfig":"203"},{"size":5317,"mtime":1580582414240,"results":"328","hashOfConfig":"203"},{"size":2462,"mtime":1580582414191,"results":"329","hashOfConfig":"203"},{"size":22463,"mtime":1580582414191,"results":"330","hashOfConfig":"203"},{"size":5562,"mtime":1580582414144,"results":"331","hashOfConfig":"203"},{"size":1572,"mtime":1583264223050,"results":"332","hashOfConfig":"203"},{"size":6701,"mtime":1583264223059,"results":"333","hashOfConfig":"203"},{"size":3087,"mtime":1580582906465,"results":"334","hashOfConfig":"203"},{"size":4089,"mtime":1606763152654,"results":"335","hashOfConfig":"203"},{"size":8047,"mtime":1580582906463,"results":"336","hashOfConfig":"203"},{"size":10438,"mtime":1606759418360,"results":"337","hashOfConfig":"203"},{"size":1959,"mtime":1580582463565,"results":"338","hashOfConfig":"203"},{"size":7223,"mtime":1583264223070,"results":"339","hashOfConfig":"203"},{"size":98,"mtime":1583264223085,"results":"340","hashOfConfig":"203"},{"size":30469,"mtime":1580582414124,"results":"341","hashOfConfig":"203"},{"size":1571,"mtime":1580582414208,"results":"342","hashOfConfig":"203"},{"size":195,"mtime":1580582463636,"results":"343","hashOfConfig":"203"},{"size":219,"mtime":1580582463579,"results":"344","hashOfConfig":"203"},{"size":137,"mtime":1580582463512,"results":"345","hashOfConfig":"203"},{"size":49921,"mtime":1580582906473,"results":"346","hashOfConfig":"203"},{"size":4625,"mtime":1580582480315,"results":"347","hashOfConfig":"203"},{"size":1770,"mtime":1580582480320,"results":"348","hashOfConfig":"203"},{"size":3042,"mtime":1580582414283,"results":"349","hashOfConfig":"203"},{"size":3622,"mtime":1580582480350,"results":"350","hashOfConfig":"203"},{"size":824,"mtime":1580582480329,"results":"351","hashOfConfig":"203"},{"size":4489,"mtime":1606761680492,"results":"352","hashOfConfig":"203"},{"size":6486,"mtime":1606761694187,"results":"353","hashOfConfig":"203"},{"size":1715,"mtime":1583264223057,"results":"354","hashOfConfig":"203"},{"size":190,"mtime":1583264223086,"results":"355","hashOfConfig":"203"},{"size":953,"mtime":1580582906475,"results":"356","hashOfConfig":"203"},{"size":1245,"mtime":1580582906467,"results":"357","hashOfConfig":"203"},{"size":6803,"mtime":1580582906475,"results":"358","hashOfConfig":"203"},{"size":9553,"mtime":1580582463515,"results":"359","hashOfConfig":"203"},{"size":630,"mtime":1580582414138,"results":"360","hashOfConfig":"203"},{"size":2637,"mtime":1583264223065,"results":"361","hashOfConfig":"203"},{"size":3723,"mtime":1583264223053,"results":"362","hashOfConfig":"203"},{"size":2021,"mtime":1580582906462,"results":"363","hashOfConfig":"203"},{"size":5514,"mtime":1580582414199,"results":"364","hashOfConfig":"203"},{"size":3992,"mtime":1580582480316,"results":"365","hashOfConfig":"203"},{"size":3279,"mtime":1580582480325,"results":"366","hashOfConfig":"203"},{"size":20392,"mtime":1583264223079,"results":"367","hashOfConfig":"203"},{"size":749,"mtime":1580582414183,"results":"368","hashOfConfig":"203"},{"size":3374,"mtime":1580582480330,"results":"369","hashOfConfig":"203"},{"size":2218,"mtime":1580582463589,"results":"370","hashOfConfig":"203"},{"size":353,"mtime":1580582463721,"results":"371","hashOfConfig":"203"},{"size":40313,"mtime":1580582463682,"results":"372","hashOfConfig":"203"},{"size":5022,"mtime":1580582463529,"results":"373","hashOfConfig":"203"},{"size":5630,"mtime":1606762255889,"results":"374","hashOfConfig":"203"},{"size":2123,"mtime":1606759418361,"results":"375","hashOfConfig":"203"},{"size":2954,"mtime":1606762373729,"results":"376","hashOfConfig":"203"},{"size":17741,"mtime":1583264223105,"results":"377","hashOfConfig":"203"},{"size":2322,"mtime":1580582450003,"results":"378","hashOfConfig":"203"},{"size":569,"mtime":1580582463669,"results":"379","hashOfConfig":"203"},{"size":14472,"mtime":1580582480337,"results":"380","hashOfConfig":"203"},{"size":2743,"mtime":1580582414233,"results":"381","hashOfConfig":"203"},{"size":32666,"mtime":1580582414149,"results":"382","hashOfConfig":"203"},{"size":7259,"mtime":1606762373711,"results":"383","hashOfConfig":"203"},{"size":4277,"mtime":1583264223054,"results":"384","hashOfConfig":"203"},{"size":1948,"mtime":1606763152654,"results":"385","hashOfConfig":"203"},{"size":1818,"mtime":1580582463504,"results":"386","hashOfConfig":"203"},{"size":3639,"mtime":1580582463552,"results":"387","hashOfConfig":"203"},{"size":4263,"mtime":1606760682166,"results":"388","hashOfConfig":"203"},{"size":2383,"mtime":1580582906484,"results":"389","hashOfConfig":"203"},{"size":25212,"mtime":1580582463553,"results":"390","hashOfConfig":"203"},{"size":7234,"mtime":1580582414227,"results":"391","hashOfConfig":"203"},{"size":35598,"mtime":1580582414128,"results":"392","hashOfConfig":"203"},{"size":3415,"mtime":1606762691586,"results":"393","hashOfConfig":"203"},{"size":1800,"mtime":1580582480348,"results":"394","hashOfConfig":"203"},{"size":6155,"mtime":1580582414181,"results":"395","hashOfConfig":"203"},{"size":45628,"mtime":1580582414273,"results":"396","hashOfConfig":"203"},{"size":50178,"mtime":1580582414133,"results":"397","hashOfConfig":"203"},{"size":1289,"mtime":1580583071375,"results":"398","hashOfConfig":"203"},{"size":119,"mtime":1583264223088,"results":"399","hashOfConfig":"203"},{"size":3183,"mtime":1580582906478,"results":"400","hashOfConfig":"203"},{"size":12824,"mtime":1580582480347,"results":"401","hashOfConfig":"203"},{"size":49996,"mtime":1580582463693,"results":"402","hashOfConfig":"203"},{"size":13959,"mtime":1580582414163,"results":"403","hashOfConfig":"203"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},"1ngs7k4",{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"409"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"418"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"441"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"441"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"426"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"458","usedDeprecatedRules":"415"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"461","usedDeprecatedRules":"462"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"495"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"409"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"504"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"409"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"571"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"571"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"418"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"426"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"495"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"495"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"495"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"615","usedDeprecatedRules":"415"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"571"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"415"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"415"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"571"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"415"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"418"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"418"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"418"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ksessions/work/gitrepos/advent-of-code/src/index.tsx",[],["827","828"],"/Users/ksessions/work/gitrepos/advent-of-code/src/Config.tsx",[],["829","830"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day19.tsx",["831","832"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\nimport SLL from '../utils/SLL'\n\nimport INPUT from './Input/Day19'\n\nconst findShortestPathToTarget = (start: string, target: string, replacements: Map<string, string[]>): number => {\n  const queue: SLL = new SLL(start)\n  const parents: { [key:string]: string } = { [start]: '' }\n\n  while (queue.length > 0) {\n    const current = queue.shift()\n    if (current) {\n      if (current === target) {\n        let pathCurrent = current\n        let pathLength = 0\n\n        while (parents[pathCurrent] !== '') {\n          pathLength++\n          pathCurrent = parents[pathCurrent]\n        }\n\n        return pathLength\n      }\n\n      for (let nextStep of generatePossibleNexts(current, replacements)) {\n        if (nextStep in parents) continue // We've seen this before\n        parents[nextStep] = current\n        sortIntoSearchQueue(nextStep, queue)\n      }\n    }\n  }\n\n  return NaN\n}\n\nfunction * generatePossibleNexts(molecule: string, replacements: Map<string, string[]>) {\n  const replacementFroms = Array.from(replacements.keys()).sort((a, b) => b.length - a.length)\n  for (let i = 0; i < replacementFroms.length; i++) {\n    const from = replacementFroms[i]\n    if (molecule.includes(from)) {\n      const replacement = (replacements.get(from) || [])[0]\n      yield molecule.replace(from, replacement)\n    }\n  }\n}\n\nconst getPossibleNextMolecules = (molecule: string, replacements: Map<string, string[]>): string[] => {\n  // Generate possible molecules\n  let nextMolecules: string[] = []\n  for (let i = 0; i < molecule.length; i++) {\n    const char = molecule.charAt(i)\n    let currentReplacements = replacements.get(char)\n    if (currentReplacements) {\n      currentReplacements.forEach(replacement => {\n        nextMolecules.push(`${molecule.slice(0, i)}${replacement}${molecule.slice(i + 1)}`)\n      })\n    } else {\n      currentReplacements = replacements.get(molecule.slice(i, i + 2))\n      if (currentReplacements) {\n        currentReplacements.forEach(replacement => {\n          nextMolecules.push(`${molecule.slice(0, i)}${replacement}${molecule.slice(i + 2)}`)\n        })\n        i++\n      }\n    }\n  }\n  // De-dupe list\n  nextMolecules = nextMolecules.filter((mol, i) => nextMolecules.indexOf(mol) === i)\n\n  return nextMolecules\n}\n\nconst parseReplacements = (inputList: string[], reverse?: boolean): Map<string, string[]> => {\n  const replacements: Map<string, string[]> = new Map()\n\n  inputList.forEach(inputLine => {\n    const [orig, newThing] = inputLine.split(' => ')\n    if (!reverse) {\n      const replacementsList = replacements.get(orig) || []\n      replacementsList.push(newThing)\n      replacements.set(orig, replacementsList)\n    } else {\n      const replacementsList = replacements.get(newThing) || []\n      replacementsList.push(orig)\n      replacements.set(newThing, replacementsList)\n    }\n  })\n\n  return replacements\n}\n\nconst sortIntoSearchQueue = (insert: string, searchQueue: SLL): void => {\n  if (!searchQueue.length) {\n    searchQueue.push(insert)\n  } else {\n    let insertAfter = searchQueue.head\n    while (\n      insertAfter\n      && insertAfter.value.length <= insert.length\n      && insertAfter.next\n      && insertAfter.next.value.length <= insert.length\n    ) {\n      insertAfter = insertAfter.next\n    }\n    if (insertAfter) {\n      searchQueue.insertAfter(insert, insertAfter)\n    } else {\n      searchQueue.push(insert)\n    }\n  }\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Calibrate Machine',\n    onClick: (inputKey) => {\n      const molecule = INPUT[inputKey].split('\\n').reverse()[0]\n      const replacements = parseReplacements(INPUT[inputKey].split('\\n').slice(0, -2))\n      const nextMolecules = getPossibleNextMolecules(molecule, replacements)\n      return {\n        answer1: nextMolecules.length.toString()\n      }\n    }\n  },\n  {\n    label: 'Generate Molecule',\n    onClick: (inputKey) => {\n      const molecule = INPUT[inputKey].split('\\n').reverse()[0]\n      const replacements = parseReplacements(INPUT[inputKey].split('\\n').slice(0, -2), true)\n      return {\n        answer2: findShortestPathToTarget(molecule, 'e', replacements).toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      You can generate <code>{answer}</code> unique molecules after one replacement step.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      It will take <code>{answer}</code> steps to generate the molecule.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 19,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Medicine for Rudolph'\n}\n\nexport default config",["833","834"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day3.tsx",[],["835","836"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day6.tsx",[],["837","838"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day19.tsx",[],["839","840"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day7.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day22.tsx",[],["841","842"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day6.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day11.tsx",[],["843","844"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day18.tsx",["845"],"import md5 from 'md5'\nimport React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day18'\n\nconst getNextRow = (row: string): string => {\n  let newRow = ''\n  for (let i = 0; i < row.length; i++) {\n    const lcr = [\n      i === 0 ? '.' : row.charAt(i - 1),\n      row.charAt(i),\n      i === row.length - 1 ? '.' : row.charAt(i + 1)\n    ]\n    if (\n      (lcr[0] === '^' && lcr[1] === '^' && lcr[2] === '.')\n      || (lcr[0] === '.' && lcr[1] === '^' && lcr[2] === '^')\n      || (lcr[0] === '^' && lcr[1] === '.' && lcr[2] === '.')\n      || (lcr[0] === '.' && lcr[1] === '.' && lcr[2] === '^')\n    ) {\n      newRow += '^'\n    } else {\n      newRow += '.'\n    }\n  }\n  return newRow\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Count Safe Tiles in Field',\n    onClick: (inputKey) => {\n      const field: string[] = [INPUT[inputKey]]\n      const fieldLength = inputKey.startsWith('DEMO')\n        ? field[0].length === 5 ? 3 : 10\n        : 40\n\n      while (field.length < fieldLength) {\n        const lastRow = field[field.length - 1]\n        field.push(getNextRow(lastRow))\n      }\n\n      const safeCount = field.reduce((count, row) => count + row.split('').filter(x => x === '.').length, 0)\n\n      return {\n        answer1: safeCount.toString()\n      }\n    }\n  },\n  {\n    label: 'Count Safe Tiles in Huge Field',\n    onClick: (inputKey) => {\n      const field: string[] = [INPUT[inputKey]]\n      const fieldLength = 400000\n\n      while (field.length < fieldLength) {\n        const lastRow = field[field.length - 1]\n        field.push(getNextRow(lastRow))\n      }\n\n      const safeCount = field.reduce((count, row) => count + row.split('').filter(x => x === '.').length, 0)\n\n      return {\n        answer2: safeCount.toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      There are <code>{answer}</code> safe tiles in the field.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      There are <code>{answer}</code> safe tiles in the huge field.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 18,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Like a Rogue'\n}\n\nexport default config","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day15.tsx",["846","847","848"],"import md5 from 'md5'\nimport React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day15'\n\ninterface IDisc {\n  numberOfPositions: number\n  startingPosition: number\n}\n\nconst getPositionAtBallTime = (disc: IDisc, discIndex: number, buttonTime: number): number => {\n  const ballTime = buttonTime + discIndex\n  return (disc.startingPosition + ballTime) % disc.numberOfPositions\n}\n\nconst parseInput = (inputKey: string): IDisc[] => {\n  const discs: IDisc[] = []\n\n  INPUT[inputKey].split('\\n').forEach(line => {\n    const numberOfPositions = parseInt(line.split(' has ')[1])\n    const startingPosition = parseInt(line.split(' at position ')[1])\n    discs.push({\n      numberOfPositions,\n      startingPosition\n    })\n  })\n\n  discs.unshift({\n    numberOfPositions: 1,\n    startingPosition: 0\n  })\n\n  return discs\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Get a Capsule!',\n    onClick: (inputKey: string) => {\n      const discs = parseInput(inputKey)\n\n      let t = 0\n      ballCheck:\n      while (true) {\n        const positionsAtBallTime = discs.map((disc, i) => getPositionAtBallTime(disc, i, t))\n        if (positionsAtBallTime.every(pos => pos === 0)) break ballCheck\n        t++\n      }\n\n      return {\n        answer1: t.toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      Push the button at time=<code>{answer}</code> to get a capsule.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      {/* Index <code>{answer}</code> produces the <code>64</code>th stretched key. */}\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 15,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Timing is Everything'\n}\n\nexport default config","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day5.tsx",["849","850"],"import React from 'react'\nimport md5 from 'md5'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day5'\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Find Password',\n    onClick: inputKey => {\n      const input = INPUT[inputKey]\n      let password = ''\n\n      letterLoop:\n      for (let i = 0; true; i++) {\n        const hash = md5(`${input}${i}`)\n        if (hash.startsWith('00000')) {\n          password += hash.charAt(5)\n          console.log(`Hash found at index ${i}: ${hash}. Password: ${password}.`)\n          if (password.length === 8) break letterLoop\n        } else if (i % 10000 === 0) console.log('Searching...')\n      }\n\n      return {\n        answer1: password\n      }\n    }\n  },\n  {\n    label: 'Find Password, v. 2',\n    onClick: inputKey => {\n      const input = INPUT[inputKey]\n      let password = '________'\n\n      letterLoop:\n      for (let i = 0; true; i++) {\n        const hash = md5(`${input}${i}`)\n        if (hash.startsWith('00000') && parseInt(hash.charAt(5)) < 8) {\n          const index = parseInt(hash.charAt(5))\n          if (password.charAt(index) === '_') {\n            password = `${password.slice(0, index)}${hash.charAt(6)}${password.slice(index + 1)}`\n            console.log(`Hash found at index ${i}: ${hash}. Password: ${password}.`)\n            if (password.indexOf('_') === -1) break letterLoop\n          }\n        } else if (i % 10000 === 0) console.log('Searching...')\n      }\n\n      return {\n        answer2: password\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      The password is{' '}\n      <code>{answer}</code>.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      The password is{' '}\n      <code>{answer}</code>.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 5,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'How About a Nice Game of Chess?'\n}\n\nexport default config",["851","852"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day5.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/App.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day7.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day11.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day17.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day25.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day21.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day19.tsx",[],["853","854"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/utils/DLL.ts",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day7.tsx",[],["855","856"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day16.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day6.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/utils/Operations.ts",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day6.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day21.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day16.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day21.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day7.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day8.tsx",[],["857","858"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day25.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day11.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day19.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day11.tsx",["859"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day11'\n\nconst validFacilities: Map<string, boolean> = new Map()\n\n/**\n * Facility interface:\n * [\n *    floor of elevator,\n *    [floor of generator, floor of microchip for a thing],\n *    [floor of generator, floor of microchip for a thing],\n *    ...\n * ]\n */\n\nconst findShortestPath = (facility: (number | [number, number])[]): number => {\n  const targetScore = ((facility.length * 2) - 1) * 3\n\n  const startingString = JSON.stringify(facility)\n  const queue: string[] = [startingString]\n  const parents: { [key:string]: string } = { [startingString]: '' }\n\n  while (queue.length > 0) {\n    const current = queue.shift()\n    if (current) {\n      const currentState = JSON.parse(current)\n      if (getScore(currentState) >= targetScore) {\n        let pathCurrent = current\n        let pathLength = 0\n\n        while (parents[pathCurrent] !== '') {\n          pathLength++\n          pathCurrent = parents[pathCurrent]\n        }\n\n        return pathLength\n      }\n\n      for (let nextStep of getPossibleNexts(currentState)) {\n        if (nextStep in parents) {\n          continue\n        }\n        parents[nextStep] = current\n        queue.push(nextStep)\n      }\n    }\n  }\n\n  return NaN\n}\n\nconst normalizeFacility = (inFacility: string[][], elevatorFloor: number): (number | [number, number])[] => {\n  const facility: [number, number][] = []\n\n  inFacility.forEach((floor, floorIndex) => {\n    floor.forEach(item => {\n      const [label, type] = item.split('-')\n      const itemIndex = label.charCodeAt(0) - 65\n      if (!facility[itemIndex]) facility[itemIndex] = [NaN, NaN]\n      if (type === 'gen') facility[itemIndex][0] = floorIndex\n      if (type === 'chip') facility[itemIndex][1] = floorIndex\n    })\n  })\n\n  return [\n    elevatorFloor,\n    ...facility\n  ].sort(sortFacility)\n}\n\nfunction * getPossibleNexts(inFacility: (number | [number, number])[]) {\n  const elevatorFloor = inFacility.shift()\n\n  if (typeof elevatorFloor === 'number') {\n    const facility: string[][] = [\n      [],\n      [],\n      [],\n      []\n    ]\n\n    inFacility.forEach((itemPair: any, index) => {\n      const label = String.fromCharCode(index + 65)\n      const [genFloor, chipFloor] = itemPair\n      facility[genFloor].push(`${label}-gen`)\n      facility[chipFloor].push(`${label}-chip`)\n    })\n\n    // Make a list of possible things to move, two first then one\n    const listToMove: string[][] = []\n    for (let i = 0; i < facility[elevatorFloor].length; i++) {\n      for (let j = i + 1; j < facility[elevatorFloor].length; j++) {\n        listToMove.push([facility[elevatorFloor][i], facility[elevatorFloor][j]])\n      }\n    }\n    facility[elevatorFloor].forEach(item => listToMove.push([item]))\n\n    if (elevatorFloor < 3) {\n      const newElevator = elevatorFloor + 1\n      for (let toMove of listToMove) {\n        const newFacility = facility.map((floor, floorIndex) => {\n          if (floorIndex !== newElevator && floorIndex !== elevatorFloor) return floor\n          if (floorIndex === elevatorFloor) {\n            return floor.filter(item => !toMove.includes(item))\n          }\n          if (floorIndex === newElevator) {\n            return [...floor, ...toMove]\n          }\n          throw new Error('fuck')\n        })\n        const newFacilityNormalized = JSON.stringify(normalizeFacility(newFacility, newElevator))\n        if (isValidFacility(newFacilityNormalized)) yield newFacilityNormalized\n      }\n    }\n    if (elevatorFloor > 0) {\n      const newElevator = elevatorFloor - 1\n      for (let toMove of listToMove.reverse()) {\n        const newFacility = facility.map((floor, floorIndex) => {\n          if (floorIndex !== newElevator && floorIndex !== elevatorFloor) return floor\n          if (floorIndex === elevatorFloor) {\n            return floor.filter(item => !toMove.includes(item))\n          }\n          if (floorIndex === newElevator) {\n            return [...floor, ...toMove]\n          }\n          throw new Error('fuck')\n        })\n        const newFacilityNormalized = JSON.stringify(normalizeFacility(newFacility, newElevator))\n        if (isValidFacility(newFacilityNormalized)) yield newFacilityNormalized\n      }\n    }\n  }\n}\n\nconst getScore = (facility: (number | [number, number])[]): number => {\n  let totalScore = 0\n  facility.forEach(item => {\n    if (typeof item === 'number') totalScore += item\n    else item.forEach(subItem => totalScore += subItem)\n  })\n  return totalScore\n}\n\nconst isValidFacility = (facilityString: string): boolean => {\n  if (validFacilities.get(facilityString)) return true\n\n  let isValid = true\n  const facility = JSON.parse(facilityString)\n  const elevatorFloor = facility.shift()\n\n  // The first item in the facility is the elevator floor number.\n  // The other items represent itemPairs - [generator floor, microchip floor]\n  // For every microchip, if it is on a different floor than its generator, it is UNPROTECTED.\n  // If there is an UNPROTECTED microchip on the same floor as a DIFFERENT generator, this is invalid.\n\n  const generatorFloors = facility.map(([x]: [number]) => x)\n\n  facility.forEach(([gFloor, mFloor]: [number, number]) => {\n    if (gFloor >= 4 || mFloor >= 4) isValid = false\n  })\n\n  facility\n    // Filter out protected microchips\n    .filter(([gFloor, mFloor]: [number, number]) => gFloor !== mFloor)\n    .forEach(([, mFloor]: [number, number]) => {\n      // For unprotected chips, see if the microchip's floor is in the list of generator floors. If so, invalid.\n      if (generatorFloors.includes(mFloor)) isValid = false\n    })\n\n  validFacilities.set(facilityString, isValid)\n\n  return isValid\n}\n\nconst parseInput = (inputKey: string): (number | [number, number])[] => {\n  const input = INPUT[inputKey]\n\n  const facility: (number | [number, number])[] = [inputKey === 'DEMO_TEST' ? 3 : 0]\n  const itemMap: { [key:string]: [number, number] } = {}\n\n  validFacilities.clear()\n\n  input.split('\\n').forEach((line, floorIndex) => {\n    const contents = line.split('contains a ')[1]\n    if (contents) {\n      const items = contents.split(' a ')\n      items.forEach(item => {\n        const itemID = item.charAt(0)\n        const itemArray: [number, number] = itemMap[itemID] || [NaN, NaN]\n        if (item.includes('generator')) itemArray[0] = floorIndex\n        if (item.includes('microchip')) itemArray[1] = floorIndex\n        itemMap[itemID] = itemArray\n      })\n    }\n  })\n\n  Object.values(itemMap).forEach(itemPair => facility.push(itemPair))\n\n  return facility.sort(sortFacility)\n}\n\nconst sortFacility = (a: number | number[], b: number | number[]) => {\n  if (typeof a === 'number') return -1\n  if (typeof b === 'number') return 1\n  return a[0] - b[0] || a[1] - b[1]\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Take Objects to Fourth Floor',\n    onClick: (inputKey: string) => {\n      const facility = parseInput(inputKey)\n\n      const shortestPathLength = findShortestPath(facility)\n\n      return {\n        answer1: shortestPathLength.toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      It takes <code>{answer}</code> steps to get everything to the fourth floor.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      <code>{answer}</code>\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 11,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Radioisotope Thermoelectric Generators'\n}\n\nexport default config","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day21.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day8.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day7.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day10.tsx",["860","861"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day10'\n\ninterface IBot {\n  id: number\n  numbers?: number[]\n  low?: { to: 'bot' | 'output', id: number }\n  high?: { to: 'bot' | 'output', id: number }\n}\n\nconst getBots = (inputKey: string): IBot[] => {\n  const bots: IBot[] = []\n\n  INPUT[inputKey].split('\\n').forEach(line => {\n    const botId = parseInt(line.split('bot ')[1])\n    const bot = bots.find(bot => bot.id === botId) || { id: botId }\n    if (line.startsWith('value')) {\n      const value = parseInt(line.split('value ')[1])\n      if (!bot.numbers) bot.numbers = []\n      if (bot.numbers) bot.numbers.push(value)\n    } else {\n      if (line.split('gives low to ')[1].startsWith('bot')) {\n        bot.low = {\n          to: 'bot',\n          id: parseInt(line.split('gives low to bot ')[1])\n        }\n      }\n      if (line.split('gives low to ')[1].startsWith('output')) {\n        bot.low = {\n          to: 'output',\n          id: parseInt(line.split('gives low to output ')[1])\n        }\n      }\n      if (line.split('and high to ')[1].startsWith('bot')) {\n        bot.high = {\n          to: 'bot',\n          id: parseInt(line.split('and high to bot ')[1])\n        }\n      }\n      if (line.split('and high to ')[1].startsWith('output')) {\n        bot.high = {\n          to: 'output',\n          id: parseInt(line.split('and high to output ')[1])\n        }\n      }\n    }\n    bots.push(bot)\n  })\n\n  return bots\n}\n\nconst runBots = (inputKey: string): {\n  bots: IBot[]\n  outputs: Map<number, number>\n  answer1: undefined | string\n} => {\n  const bots = getBots(inputKey)\n  const outputs: Map<number, number> = new Map()\n  let answer1: undefined | string = undefined\n\n  const comparisonNumbers = inputKey.indexOf('DEMO') !== -1\n  ? [2, 5]\n  : [17, 61]\n\n  while (bots.some(bot => bot.numbers ? bot.numbers.length === 2 : false)) {\n    botLoop:\n    for (const bot of bots) {\n      if (!bot.numbers || bot.numbers.length !== 2) continue botLoop\n      const low = Math.min(...bot.numbers)\n      const high = Math.max(...bot.numbers)\n      bot.numbers = []\n      if (bot.low) {\n        const botLowId = bot.low.id\n        if (bot.low.to === 'bot') {\n          const toBotLow = bots.find(findBot => findBot.id === botLowId)\n          if (toBotLow) {\n            if (!toBotLow.numbers) toBotLow.numbers = []\n            toBotLow.numbers.push(low)\n          }\n        }\n        if (bot.low.to === 'output') {\n          outputs.set(bot.low.id, low)\n        }\n      }\n      if (bot.high) {\n        if (bot.high.to === 'bot') {\n          const botHighId = bot.high.id\n          const toBotHigh = bots.find(findBot => findBot.id === botHighId)\n          if (toBotHigh) {\n            if (!toBotHigh.numbers) toBotHigh.numbers = []\n            toBotHigh.numbers.push(high)\n          }\n        }\n        if (bot.high.to === 'output') {\n          outputs.set(bot.high.id, high)\n        }\n      }\n      if (low === comparisonNumbers[0] && high === comparisonNumbers[1]) {\n        answer1 = bot.id.toString()\n      }\n      break botLoop\n    }\n  }\n\n  return {\n    bots,\n    outputs,\n    answer1\n  }\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Find Bot',\n    onClick: inputKey => {\n      const { answer1 } = runBots(inputKey)\n\n      return {\n        answer1\n      }\n    }\n  },\n  {\n    label: 'Find Value',\n    onClick: inputKey => {\n      const { outputs } = runBots(inputKey)\n\n      return {\n        answer2: ((outputs.get(0) || 1) * (outputs.get(1) || 1) * (outputs.get(2) || 1)).toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      The number of the designated bot is{' '}\n      <code>{answer}</code>.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      The value of outputs <code>0</code>, <code>1</code>, and <code>2</code>{' '}\n      multiplied by each other is <code>{answer}</code>.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 10,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => defaultRenderDay(dayConfig, inputKey),\n  title: 'Balance Bots'\n}\n\nexport default config","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day5.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day16.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day21.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day8.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day19.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day25.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day5.tsx",[],["862","863"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day11.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day6.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day24.tsx",["864"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/utils/Tree.ts",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day16.tsx",["865"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day5.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day7.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day21.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day4.tsx",["866","867"],"import React from 'react'\nimport {\n  defaultRenderDay,\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day4'\n\nlet answer2_a = ''\nlet prevInputKey = ''\n\nconst isRealRoom = (room: string): boolean => {\n  const letterMap: Map<string, number> = new Map()\n  const letterArr: Array<{ letter: string, count: number }> = []\n\n  for (let i = 0; i < room.length; i++) {\n    const char = room.charAt(i)\n\n    if (char === '[') break\n\n    if (char.match(/[a-z]/i)) {\n      letterMap.set(char, (letterMap.get(char) || 0) + 1)\n    }\n  }\n\n  for (const [letter, count] of letterMap.entries()) letterArr.push({ letter, count })\n\n  const topFiveLetters = letterArr.sort((a, b) => (\n    b.count !== a.count\n      ? b.count - a.count\n      : a.letter > b.letter ? 1 : -1\n  )).map(x => x.letter).slice(0, 5)\n\n  const checksum = room.split('[')[1].slice(0, 5).split('')\n\n  return !(checksum.some(letter => topFiveLetters.indexOf(letter) === -1))\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Sum Real Rooms',\n    onClick: inputKey => (\n      {\n        answer1: INPUT[inputKey].split('\\n')\n          .filter(room => isRealRoom(room))\n          .map(roomLine => {\n            const split = roomLine.split('-')\n            return parseInt(split[split.length - 1])\n          })\n          .reduce((sum, id) => sum + id, 0)\n          .toString()\n      }\n    )\n  },\n  {\n    label: 'Print Decrypted Room Names',\n    onClick: inputKey => {\n      INPUT[inputKey].split('\\n')\n      .filter(room => isRealRoom(room))\n      .map(roomLine => {\n        const split = roomLine.split('-')\n        const rotate = parseInt(split[split.length - 1])\n        let result = ''\n\n        const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n        for (let i = 0; i < roomLine.length; i++) {\n          const char = roomLine.charAt(i)\n\n          if (alphabet.indexOf(char) !== -1) {\n            result += alphabet[(alphabet.indexOf(char) + rotate) % alphabet.length]\n          } else if (char === '-') {\n            result += ' '\n          } else if (!isNaN(parseInt(char))) break\n        }\n\n        answer2_a += `${rotate}: ${result}\\n`\n      })\n\n      return {\n        answer2: ''\n      }\n    }\n  }\n]\n\nconst renderDay = (dayConfig: IDayConfig, inputKey: string): JSX.Element => {\n  if (inputKey !== prevInputKey) {\n    prevInputKey = inputKey\n    answer2_a = ''\n  }\n\n  return (\n    <div className=\"render-box render-box--no-wrap\">\n      <div>\n        <h3>Input:</h3>\n        <pre>{dayConfig.INPUT[inputKey]}</pre>\n      </div>\n      {answer2_a.length > 0 && (\n        <div className=\"render-box--left-margin\">\n          <h3>Decrypted Room Names:</h3>\n          <pre>{answer2_a}</pre>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      The sum of the sector IDs of the real rooms is{' '}\n      <code>{answer}</code>.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      Hopefully you can find the answer below!\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 4,\n  INPUT,\n  renderDay,\n  title: 'Security Through Obscurity'\n}\n\nexport default config","/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day22.tsx",["868"],"import React from 'react'\nimport {\n  IButton,\n  IDayConfig\n} from '../Config'\n\nimport INPUT from './Input/Day22'\nimport SLL from '../utils/SLL'\nimport { manhattanDistance } from '../utils/Various'\n\ninterface INode {\n  avail: number\n  name: string\n  neighbors: string[]\n  render: '.' | '_' | '#' | 'G'\n  size: number\n  used: number\n  usePercent: number\n  x: number\n  y: number\n}\n\nlet nodes = new Map()\nconst maxX = 31\nconst maxY = 29\n\nconst findShortestPath = (grid: Map<string, INode>, inputKey: string): number => {\n  interface ISearchNode {\n    gridStr: string\n    pathLength: number\n  }\n\n  const visited: Map<string, true> = new Map()\n\n  const queue = new SLL({\n    gridStr: renderGridString(grid, inputKey, false),\n    pathLength: 0\n  })\n\n  while (queue.length) {\n    const currentSearchNode = queue.shift()\n    if (currentSearchNode) {\n      if (currentSearchNode.gridStr.charAt(0) === 'G') {\n        return currentSearchNode.pathLength\n      }\n      // Add this search node to the visited list\n      visited.set(currentSearchNode.gridStr, true)\n      const nexts = getPossibleNexts(currentSearchNode.gridStr, inputKey, visited)\n      nexts.forEach(next => queue.push({ gridStr: next, pathLength: currentSearchNode.pathLength + 1 }))\n    }\n  }\n\n  return NaN\n}\n\nconst getContentsFromCoords = (gridStr: string, x: number, y: number, inputKey: string): string => {\n  const localMaxX = inputKey.startsWith('DEMO') ? 2 : maxX\n\n  return gridStr.charAt(getStringIndexFromCoords(x, y, localMaxX))\n}\n\nconst getCoordsFromStringIndex = (index: number, width: number): [number, number] => ([\n  index % width,\n  Math.floor(index / width)\n])\n\nconst getStringIndexFromCoords = (x: number, y: number, width: number): number => x + (y * (width + 1))\n\nconst getPossibleNexts = (gridStr: string, inputKey: string, visited: Map<string, true>): string[] => {\n  const localMaxX = inputKey.startsWith('DEMO') ? 2 : maxX\n  const localMaxY = inputKey.startsWith('DEMO') ? 2\n    : inputKey === 'REAL' ? maxY : 1\n  // Find the x,y coords of the empty node and the G node\n  const emptyIndex = gridStr.indexOf('_')\n  const [ emptyX, emptyY ] = getCoordsFromStringIndex(emptyIndex, localMaxX + 1)\n  \n  // From there, you can get possible next steps (i.e. move empty up, down, left, right)\n  return [\n    [emptyX - 1, emptyY] as [number, number],\n    [emptyX + 1, emptyY] as [number, number],\n    [emptyX, emptyY - 1] as [number, number],\n    [emptyX, emptyY + 1] as [number, number]\n  ]\n    .filter(([x, y]) => (\n      // Within the allowed space\n      x >= 0 && x <= localMaxX && y >= 0 && y <= localMaxY\n      // Not a full node\n      && getContentsFromCoords(gridStr, x, y, inputKey) !== '#'\n    ))\n    .map((nextCoords) => moveEmptyToCoords(gridStr, nextCoords, localMaxX, inputKey))\n    // Filter nexts against the visited list\n    .filter(gridStr => !visited.get(gridStr))\n    .sort((a, b) => {\n      // First priority is moving the Goal square closer to [0,0]\n      const aGoalCoords = getCoordsFromStringIndex(a.indexOf('G'), localMaxX + 1)\n      const bGoalCoords = getCoordsFromStringIndex(b.indexOf('G'), localMaxX + 1)\n      const aGoalDistance = manhattanDistance(aGoalCoords, [0, 0])\n      const bGoalDistance = manhattanDistance(bGoalCoords, [0, 0])\n      if (aGoalDistance !== bGoalDistance) return aGoalDistance - bGoalDistance\n      // Second priority is moving the Empty square left of the Goal square\n      const aEmptyCoords = getCoordsFromStringIndex(a.indexOf('_'), localMaxX + 1)\n      const bEmptyCoords = getCoordsFromStringIndex(b.indexOf('_'), localMaxX + 1)\n      const aEmptyDistance = manhattanDistance(aEmptyCoords, [aGoalCoords[0] - 1, aGoalCoords[1]])\n      const bEmptyDistance = manhattanDistance(bEmptyCoords, [bGoalCoords[0] - 1, bGoalCoords[1]])\n      return aEmptyDistance - bEmptyDistance\n    })\n}\n\nconst getRender = (nodeLine: string, inputKey: string): '.' | '_' | '#' | 'G' => {\n  const size = parseInt(nodeLine.slice(23))\n  const usePercent = parseInt(nodeLine.slice(42))\n  const x = parseInt(nodeLine.split('node-x')[1])\n  const y = parseInt(nodeLine.split('-y')[1])\n\n  const localMaxX = inputKey.startsWith('DEMO') ? 2 : maxX\n  const maxSize = inputKey.startsWith('DEMO') ? 30 : 100\n\n  if (usePercent === 0) return '_'\n  if (size > maxSize) return '#'\n  if (x === localMaxX && y === 0) return 'G'\n  return '.'\n}\n\nconst isViablePair = (a: INode, b: INode): boolean => (\n  // Node A is not empty (its Used is not zero).\n  a.used !== 0\n  // Nodes A and B are not the same node.\n  && a !== b\n  // The data on node A (its Used) would fit on node B (its Avail).\n  && a.used <= b.avail\n)\n\nconst moveEmptyToCoords = (gridStr: string, nextCoords: [number, number], width: number, inputKey: string): string => {\n  // Remove old empty\n  let nextGridStr = gridStr.replace('_', getContentsFromCoords(gridStr, nextCoords[0], nextCoords[1], inputKey))\n  // Insert new empty\n  const newEmptyStringIndex = getStringIndexFromCoords(nextCoords[0], nextCoords[1], width)\n  return `${\n    nextGridStr.slice(0, newEmptyStringIndex)\n  }_${\n    nextGridStr.slice(newEmptyStringIndex + 1)\n  }`\n}\n\nconst parseInput = (inputKey: string): Map<string, INode> => {\n  const nodes: Map<string, INode> = new Map()\n\n  INPUT[inputKey].split('\\n').slice(2).forEach(nodeLine => {\n    const node: INode = {\n      avail: parseInt(nodeLine.slice(34)),\n      name: nodeLine.split(' ')[0],\n      neighbors: [],\n      render: getRender(nodeLine, inputKey),\n      size: parseInt(nodeLine.slice(23)),\n      used: parseInt(nodeLine.slice(29)),\n      usePercent: parseInt(nodeLine.slice(42)),\n      x: parseInt(nodeLine.split('node-x')[1]),\n      y: parseInt(nodeLine.split('-y')[1])\n    }\n    const neighbors = [\n      [node.x - 1, node.y],\n      [node.x + 1, node.y],\n      [node.x, node.y - 1],\n      [node.x, node.y + 1]\n    ]\n      .filter(([fx, fy]) => fx >= 0 && fx <= maxX && fy >= 0 && fy <= maxY)\n      .map(([x, y]) => `/dev/grid/node-x${x}-y${y}`)\n    node.neighbors = neighbors\n    nodes.set(node.name, node)\n  })\n\n  return nodes\n}\n\nconst renderDay = (dayConfig: IDayConfig, inputKey: string) => (\n  <div>\n    <h3>Grid:</h3>\n    <pre>{renderGridString(nodes, inputKey, true)}</pre>\n  </div>\n)\n\nconst renderGridString = (grid: Map<string, INode>, inputKey: string, lineBreaks: boolean): string => {\n  let gridStr = ''\n  const localMaxX = inputKey.startsWith('DEMO') ? 2 : maxX\n  const localMaxY = inputKey.startsWith('DEMO') ? 2\n    : inputKey === 'REAL' ? maxY : 1\n\n  for (let y = 0; y <= localMaxY; y++) {\n    for (let x = 0; x <= localMaxX; x++) {\n      const nodeName = `/dev/grid/node-x${x}-y${y}`\n      const node = grid.get(nodeName)\n      if (node) {\n        gridStr += node.render\n      }\n      if (x === localMaxX && lineBreaks) {\n        gridStr += '\\n'\n      }\n    }\n  }\n\n  return gridStr\n}\n\nconst BUTTONS: IButton[] = [\n  {\n    label: 'Find Viable Pairs',\n    onClick: (inputKey: string) => {\n      nodes.clear()\n      nodes = parseInput(inputKey)\n\n      const nodeNames = Array.from(nodes.keys())\n      let viablePairCount = 0\n\n      for (let keyA of nodeNames) {\n        for (let keyB of nodeNames) {\n          const nodeA = nodes.get(keyA)\n          const nodeB = nodes.get(keyB)\n          if (nodeA && nodeB && isViablePair(nodeA, nodeB)) viablePairCount++\n        }\n      }\n\n      return {\n        answer1: viablePairCount.toString()\n      }\n    }\n  },\n  {\n    label: 'Access Data',\n    onClick: (inputKey: string) => {\n      nodes.clear()\n      nodes = parseInput(inputKey)\n\n      const pathLength = findShortestPath(nodes, inputKey)\n\n      return {\n        answer2: pathLength.toString()\n      }\n    }\n  }\n]\n\nconst config: IDayConfig = {\n  answer1Text: (answer) => (\n    <span>\n      There are <code>{answer}</code> viable pairs of nodes.\n    </span>\n  ),\n  answer2Text: (answer) => (\n    <span>\n      It will take <code>{answer}</code> steps to access the data.\n    </span>\n  ),\n  buttons: BUTTONS,\n  day: 22,\n  INPUT,\n  renderDay: (dayConfig, inputKey) => renderDay(dayConfig, inputKey),\n  title: 'Grid Computing'\n}\n\nexport default config","/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day9.tsx",["869"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day14.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day9.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day11.tsx",["870"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day25.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day11.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day24.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day13.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day6.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day5.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day15.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day14.tsx",["871"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day16.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day3.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day12.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day11.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day19.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day5.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2020/Config.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/utils/Various.ts",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day1.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day18.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day8.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Day16.tsx",["872"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day16.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day2.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Day8.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Day22.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/utils/SLL.ts",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day8.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day17.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Day17.tsx",["873","874"],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day7.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Day10.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day23.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day5.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Config.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2015/Input/Day4.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2016/Input/Day8.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2019/Input/Day6.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2017/Input/Day20.tsx",[],"/Users/ksessions/work/gitrepos/advent-of-code/src/2018/Input/Day10.tsx",[],{"ruleId":"875","replacedBy":"876"},{"ruleId":"877","replacedBy":"878"},{"ruleId":"875","replacedBy":"879"},{"ruleId":"877","replacedBy":"880"},{"ruleId":"881","severity":1,"message":"882","line":59,"column":35,"nodeType":"883","messageId":"884","endLine":61,"endColumn":8},{"ruleId":"881","severity":1,"message":"882","line":65,"column":37,"nodeType":"883","messageId":"884","endLine":67,"endColumn":10},{"ruleId":"875","replacedBy":"885"},{"ruleId":"877","replacedBy":"886"},{"ruleId":"875","replacedBy":"887"},{"ruleId":"877","replacedBy":"888"},{"ruleId":"875","replacedBy":"889"},{"ruleId":"877","replacedBy":"890"},{"ruleId":"875","replacedBy":"891"},{"ruleId":"877","replacedBy":"892"},{"ruleId":"875","replacedBy":"893"},{"ruleId":"877","replacedBy":"894"},{"ruleId":"875","replacedBy":"895"},{"ruleId":"877","replacedBy":"896"},{"ruleId":"897","severity":1,"message":"898","line":1,"column":8,"nodeType":"899","messageId":"900","endLine":1,"endColumn":11},{"ruleId":"897","severity":1,"message":"898","line":1,"column":8,"nodeType":"899","messageId":"900","endLine":1,"endColumn":11},{"ruleId":"881","severity":1,"message":"901","line":50,"column":47,"nodeType":"883","messageId":"884","endLine":50,"endColumn":93},{"ruleId":"902","severity":1,"message":"903","line":51,"column":64,"nodeType":"899","messageId":"904","endLine":51,"endColumn":73,"fix":"905"},{"ruleId":"902","severity":1,"message":"906","line":24,"column":44,"nodeType":"899","messageId":"904","endLine":24,"endColumn":54,"fix":"907"},{"ruleId":"902","severity":1,"message":"906","line":47,"column":53,"nodeType":"899","messageId":"904","endLine":47,"endColumn":63,"fix":"908"},{"ruleId":"875","replacedBy":"909"},{"ruleId":"877","replacedBy":"910"},{"ruleId":"875","replacedBy":"911"},{"ruleId":"877","replacedBy":"912"},{"ruleId":"875","replacedBy":"913"},{"ruleId":"877","replacedBy":"914"},{"ruleId":"875","replacedBy":"915"},{"ruleId":"877","replacedBy":"916"},{"ruleId":"897","severity":1,"message":"917","line":155,"column":9,"nodeType":"899","messageId":"900","endLine":155,"endColumn":22},{"ruleId":"902","severity":1,"message":"918","line":75,"column":62,"nodeType":"899","messageId":"904","endLine":75,"endColumn":69,"fix":"919"},{"ruleId":"902","severity":1,"message":"918","line":108,"column":13,"nodeType":"899","messageId":"904","endLine":108,"endColumn":20,"fix":"920"},{"ruleId":"875","replacedBy":"921"},{"ruleId":"877","replacedBy":"922"},{"ruleId":"897","severity":1,"message":"923","line":7,"column":8,"nodeType":"899","messageId":"900","endLine":7,"endColumn":11},{"ruleId":"881","severity":1,"message":"924","line":97,"column":13,"nodeType":"883","messageId":"884","endLine":99,"endColumn":6},{"ruleId":"897","severity":1,"message":"925","line":3,"column":3,"nodeType":"899","messageId":"900","endLine":3,"endColumn":19},{"ruleId":"926","severity":1,"message":"927","line":61,"column":21,"nodeType":"883","messageId":"928","endLine":61,"endColumn":23},{"ruleId":"897","severity":1,"message":"929","line":28,"column":13,"nodeType":"899","messageId":"900","endLine":28,"endColumn":24},{"ruleId":"897","severity":1,"message":"925","line":3,"column":3,"nodeType":"899","messageId":"900","endLine":3,"endColumn":19},{"ruleId":"930","severity":1,"message":"931","line":131,"column":11,"nodeType":"932","messageId":"933","endLine":132,"endColumn":18},{"ruleId":"897","severity":1,"message":"934","line":195,"column":7,"nodeType":"899","messageId":"900","endLine":195,"endColumn":8},{"ruleId":"902","severity":1,"message":"935","line":90,"column":19,"nodeType":"899","messageId":"904","endLine":90,"endColumn":26,"fix":"936"},{"ruleId":"897","severity":1,"message":"937","line":24,"column":9,"nodeType":"899","messageId":"900","endLine":24,"endColumn":25},{"ruleId":"881","severity":1,"message":"938","line":50,"column":27,"nodeType":"883","messageId":"884","endLine":64,"endColumn":10},"no-native-reassign",["939"],"no-negated-in-lhs",["940"],["939"],["940"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'nextMolecules'.","ArrowFunctionExpression","unsafeRefs",["939"],["940"],["939"],["940"],["939"],["940"],["939"],["940"],["939"],["940"],["939"],["940"],"@typescript-eslint/no-unused-vars","'md5' is defined but never used.","Identifier","unusedVar","Function declared in a loop contains unsafe references to variable(s) 't'.","no-extra-label","This label 'ballCheck' is unnecessary.","unexpected",{"range":"941","text":"942"},"This label 'letterLoop' is unnecessary.",{"range":"943","text":"942"},{"range":"944","text":"942"},["939"],["940"],["939"],["940"],["939"],["940"],["939"],["940"],"'elevatorFloor' is assigned a value but never used.","This label 'botLoop' is unnecessary.",{"range":"945","text":"942"},{"range":"946","text":"942"},["939"],["940"],"'SLL' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'currentSample', 'currentSample'.","'defaultRenderDay' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'ISearchNode' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'i' is assigned a value but never used.","This label 'keyLoop' is unnecessary.",{"range":"947","text":"942"},"'nextStepsForEach' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'queue', 'queue', 'queue', 'queue', 'queue', 'queue', 'queue', 'queue'.","no-global-assign","no-unsafe-negation",[1225,1235],"",[600,611],[1376,1387],[2010,2018],[3087,3095],[2219,2227]]